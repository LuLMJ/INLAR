{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ProductEvent } from 'src/app/models/enums/products/ProductEvent';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/doador/doador.service\";\nimport * as i2 from \"src/app/services/categories/categories.service\";\nimport * as i3 from \"src/app/services/products/products.service\";\nimport * as i4 from \"src/app/shared/services/products/products-data-transfer.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"primeng/dynamicdialog\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/inputtext\";\nimport * as i12 from \"primeng/dropdown\";\nfunction ProductFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductFormComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleSubmitAddProduct());\n    });\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementStart(4, \"p-dropdown\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_div_0_Template_p_dropdown_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectedCategory = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p-dropdown\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_div_0_Template_p_dropdown_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.doadorCategory = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6)(7, \"input\", 7)(8, \"input\", 8);\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵelement(10, \"p-button\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.addProductForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"options\", ctx_r0.categoriesDatas)(\"ngModel\", ctx_r0.selectedCategory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r0.doadorDatas)(\"ngModel\", ctx_r0.doadorCategory);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.addProductForm.valid);\n  }\n}\nfunction ProductFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductFormComponent_div_1_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleSubmitEditProduct());\n    });\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelement(3, \"input\", 3)(4, \"input\", 6)(5, \"input\", 7)(6, \"input\", 11);\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵelement(8, \"p-button\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editProductForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.editProductForm.valid);\n  }\n}\nexport class ProductFormComponent {\n  constructor(doadorService, categoriesService, productsService, productsDtService, formBuilder, messageService, router, ref) {\n    this.doadorService = doadorService;\n    this.categoriesService = categoriesService;\n    this.productsService = productsService;\n    this.productsDtService = productsDtService;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.router = router;\n    this.ref = ref;\n    this.destroy$ = new Subject();\n    this.categoriesDatas = [];\n    this.selectedCategory = [];\n    this.productsDatas = [];\n    this.addProductForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required],\n      category_id: ['', Validators.required],\n      doador_id: ['', Validators.required],\n      amount: [0, Validators.required]\n    });\n    this.editProductForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required],\n      amount: [0, Validators.required]\n    });\n    this.addProductAction = ProductEvent.ADD_PRODUCT_EVENT;\n    this.editProductAction = ProductEvent.EDIT_PRODUCT_EVENT;\n    this.saleProductAction = ProductEvent.SALE_PRODUCT_EVENT;\n  }\n  ngOnInit() {\n    this.productAction = this.ref.data;\n    if (this.productAction?.event?.action === this.editProductAction && this.productAction?.productDatas) {\n      this.getProductSelectedDatas(this.productAction?.event?.id);\n    }\n    this.productAction?.event?.action === this.saleProductAction && this.getProductDatas();\n    this.getAllCategories();\n  }\n  getAllCategories() {\n    this.categoriesService.getAllCategories().pipe(takeUntil(this.destroy$)).subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.categoriesDatas = response;\n        }\n      }\n    });\n  }\n  getAllDoador() {\n    this.doadorService['getAllDoador']().pipe(takeUntil(this.destroy$)).subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.doadorDatas = response;\n        }\n      }\n    });\n  }\n  handleSubmitAddProduct() {\n    if (this.addProductForm?.value && this.addProductForm?.valid) {\n      const requestCreateProduct = {\n        name: this.addProductForm.value.name,\n        price: this.addProductForm.value.price,\n        description: this.addProductForm.value.description,\n        category_id: this.addProductForm.value.category_id,\n        doador_id: this.addProductForm.value.doador_id,\n        amount: Number(this.addProductForm.value.amount)\n      };\n      this.productsService.createProduct(requestCreateProduct).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          if (response) {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Produto criado com sucesso!',\n              life: 2500\n            });\n          }\n        },\n        error: err => {\n          console.log(err);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao criar produto!',\n            life: 2500\n          });\n        }\n      });\n    }\n    this.addProductForm.reset();\n  }\n  handleSubmitEditProduct() {\n    if (this.editProductForm.value && this.editProductForm.valid && this.productAction.event.id) {\n      const requestEditProduct = {\n        name: this.editProductForm.value.name,\n        price: this.editProductForm.value.price,\n        description: this.editProductForm.value.description,\n        product_id: this.productAction?.event?.id,\n        amount: this.editProductForm.value.amount\n      };\n      this.productsService.editProduct(requestEditProduct).pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Sucesso',\n            detail: 'Produto editado com sucesso!',\n            life: 2500\n          });\n          this.editProductForm.reset();\n        },\n        error: err => {\n          console.log(err);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao editar produto!',\n            life: 2500\n          });\n          this.editProductForm.reset();\n        }\n      });\n    }\n  }\n  getProductSelectedDatas(productId) {\n    const allProducts = this.productAction?.productDatas;\n    if (allProducts.length > 0) {\n      const productFiltered = allProducts.filter(element => element?.id === productId);\n      if (productFiltered) {\n        this.productSelectedDatas = productFiltered[0];\n        this.editProductForm.setValue({\n          name: this.productSelectedDatas?.name,\n          price: this.productSelectedDatas?.price,\n          amount: this.productSelectedDatas?.amount,\n          description: this.productSelectedDatas?.description\n        });\n      }\n    }\n  }\n  getProductDatas() {\n    this.productsService.getAllProducts().pipe(takeUntil(this.destroy$)).subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.productsDatas = response;\n          this.productsDatas && this.productsDtService.setProductsDatas(this.productsDatas);\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nProductFormComponent.ɵfac = function ProductFormComponent_Factory(t) {\n  return new (t || ProductFormComponent)(i0.ɵɵdirectiveInject(i1.DoadorService), i0.ɵɵdirectiveInject(i2.CategoriesService), i0.ɵɵdirectiveInject(i3.ProductsService), i0.ɵɵdirectiveInject(i4.ProductsDataTransferService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.MessageService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i8.DynamicDialogConfig));\n};\nProductFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductFormComponent,\n  selectors: [[\"app-product-form\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"flex\", \"flex-column\", \"md:flex-column\", \"gap-3\"], [\"pInputText\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"name\"], [\"styleClass\", \"w-full\", \"optionLabel\", \"name\", \"optionValue\", \"id\", \"placeholder\", \"Selecione uma categoria\", \"formControlName\", \"category_id\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"styleClass\", \"w-full\", \"optionLabel\", \"name\", \"optionValue\", \"id\", \"placeholder\", \"Selecione um(a) Doador\", \"formControlName\", \"doador_id\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"pInputText\", \"\", \"placeholder\", \"Pre\\u00E7o\", \"formControlName\", \"price\"], [\"pInputText\", \"\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", \"formControlName\", \"description\"], [\"pInputText\", \"\", \"placeholder\", \"Quantidade\", \"formControlName\", \"amount\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\", \"m-1\"], [\"type\", \"submit\", \"label\", \"Concluir\", 3, \"disabled\"], [\"pInputText\", \"\", \"type\", \"number\", \"placeholder\", \"Quantidade\", \"formControlName\", \"amount\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\"]],\n  template: function ProductFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProductFormComponent_div_0_Template, 11, 6, \"div\", 0);\n      i0.ɵɵtemplate(1, ProductFormComponent_div_1_Template, 9, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", (ctx.productAction == null ? null : ctx.productAction.event == null ? null : ctx.productAction.event.action) === ctx.addProductAction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.productAction == null ? null : ctx.productAction.event == null ? null : ctx.productAction.event.action) === ctx.editProductAction);\n    }\n  },\n  dependencies: [i9.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i10.Button, i11.InputText, i12.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","Subject","takeUntil","ProductEvent","i0","ProductFormComponent","constructor","doadorService","categoriesService","productsService","productsDtService","formBuilder","messageService","router","ref","group","name","required","price","description","category_id","doador_id","amount","ADD_PRODUCT_EVENT","EDIT_PRODUCT_EVENT","SALE_PRODUCT_EVENT","ngOnInit","productAction","data","event","action","editProductAction","productDatas","getProductSelectedDatas","id","saleProductAction","getProductDatas","getAllCategories","pipe","destroy$","subscribe","next","response","length","categoriesDatas","getAllDoador","doadorDatas","handleSubmitAddProduct","addProductForm","value","valid","requestCreateProduct","Number","createProduct","add","severity","summary","detail","life","error","err","console","log","reset","handleSubmitEditProduct","editProductForm","requestEditProduct","product_id","editProduct","productId","allProducts","productFiltered","filter","element","productSelectedDatas","setValue","getAllProducts","productsDatas","setProductsDatas","ngOnDestroy","complete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\products\\components\\product-form\\product-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\products\\components\\product-form\\product-form.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ProductEvent } from 'src/app/models/enums/products/ProductEvent';\nimport { GetCategoriesResponse } from 'src/app/models/interfaces/categories/responses/GetCategoriesResponse';\nimport { EventAction } from 'src/app/models/interfaces/products/event/EventAction';\nimport { CreateProductRequest } from 'src/app/models/interfaces/products/request/CreateProductRequest';\nimport { EditProductRequest } from 'src/app/models/interfaces/products/request/EditProductRequest';\nimport { GetAllProductsResponse } from 'src/app/models/interfaces/products/response/GetAllProductsResponse';\nimport { CategoriesService } from 'src/app/services/categories/categories.service';\nimport { DoadorService } from 'src/app/services/doador/doador.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\nimport { ProductsDataTransferService } from 'src/app/shared/services/products/products-data-transfer.service';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: [],\n})\nexport class ProductFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n  public categoriesDatas: Array<GetCategoriesResponse> = [];\n  public selectedCategory: Array<{ name: string; code: string }> = [];\n  public productAction!: {\n    event: EventAction;\n    productDatas: Array<GetAllProductsResponse>;\n  };\n  public productSelectedDatas!: GetAllProductsResponse;\n  public productsDatas: Array<GetAllProductsResponse> = [];\n  public addProductForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    price: ['', Validators.required],\n    description: ['', Validators.required],\n    category_id: ['', Validators.required],\n    doador_id: ['', Validators.required],\n    amount: [0, Validators.required],\n  });\n  public editProductForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    price: ['', Validators.required],\n    description: ['', Validators.required],\n    amount: [0, Validators.required],\n  });\n\n  public addProductAction = ProductEvent.ADD_PRODUCT_EVENT;\n  public editProductAction = ProductEvent.EDIT_PRODUCT_EVENT;\n  public saleProductAction = ProductEvent.SALE_PRODUCT_EVENT;\n  doadorDatas: any;\ndoadorCategory: any;\n\n  constructor(\n    private doadorService: DoadorService,\n    private categoriesService: CategoriesService,\n    private productsService: ProductsService,\n    private productsDtService: ProductsDataTransferService,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private router: Router,\n    public ref: DynamicDialogConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.productAction = this.ref.data;\n\n    if (\n      this.productAction?.event?.action === this.editProductAction &&\n      this.productAction?.productDatas\n    ) {\n      this.getProductSelectedDatas(this.productAction?.event?.id as string);\n    }\n\n    this.productAction?.event?.action === this.saleProductAction &&\n      this.getProductDatas();\n\n    this.getAllCategories();\n  }\n\n  getAllCategories(): void {\n    this.categoriesService\n      .getAllCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          if (response.length > 0) {\n            this.categoriesDatas = response;\n          }\n        },\n      });\n  }\n\n  \n  getAllDoador(): void {\n    this.doadorService['getAllDoador']()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response: string | any[]) => {\n          if (response.length > 0) {\n            this.doadorDatas = response;\n          }\n        },\n      });\n  }\n\n  handleSubmitAddProduct(): void {\n    if (this.addProductForm?.value && this.addProductForm?.valid) {\n      const requestCreateProduct: CreateProductRequest = {\n        name: this.addProductForm.value.name as string,\n        price: this.addProductForm.value.price as string,\n        description: this.addProductForm.value.description as string,\n        category_id: this.addProductForm.value.category_id as string,\n        doador_id: this.addProductForm.value.doador_id as string,\n        amount: Number(this.addProductForm.value.amount),\n      };\n\n      this.productsService\n        .createProduct(requestCreateProduct)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            if (response) {\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Sucesso',\n                detail: 'Produto criado com sucesso!',\n                life: 2500,\n              });\n            }\n          },\n          error: (err) => {\n            console.log(err);\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao criar produto!',\n              life: 2500,\n            });\n          },\n        });\n    }\n\n    this.addProductForm.reset();\n  }\n\n  handleSubmitEditProduct(): void {\n    if (\n      this.editProductForm.value &&\n      this.editProductForm.valid &&\n      this.productAction.event.id\n    ) {\n      const requestEditProduct: EditProductRequest = {\n        name: this.editProductForm.value.name as string,\n        price: this.editProductForm.value.price as string,\n        description: this.editProductForm.value.description as string,\n        product_id: this.productAction?.event?.id,\n        amount: this.editProductForm.value.amount as number,\n      };\n\n      this.productsService\n        .editProduct(requestEditProduct)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Produto editado com sucesso!',\n              life: 2500,\n            });\n            this.editProductForm.reset();\n          },\n          error: (err) => {\n            console.log(err);\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao editar produto!',\n              life: 2500,\n            });\n            this.editProductForm.reset();\n          },\n        });\n    }\n  }\n\n  getProductSelectedDatas(productId: string): void {\n    const allProducts = this.productAction?.productDatas;\n\n    if (allProducts.length > 0) {\n      const productFiltered = allProducts.filter(\n        (element) => element?.id === productId\n      );\n\n      if (productFiltered) {\n        this.productSelectedDatas = productFiltered[0];\n\n        this.editProductForm.setValue({\n          name: this.productSelectedDatas?.name,\n          price: this.productSelectedDatas?.price,\n          amount: this.productSelectedDatas?.amount,\n          description: this.productSelectedDatas?.description,\n        });\n      }\n    }\n  }\n\n  getProductDatas(): void {\n    this.productsService\n      .getAllProducts()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          if (response.length > 0) {\n            this.productsDatas = response;\n            this.productsDatas &&\n              this.productsDtService.setProductsDatas(this.productsDatas);\n          }\n        },\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","\n<div *ngIf=\"productAction?.event?.action === addProductAction\">\n  <form [formGroup]=\"addProductForm\" (ngSubmit)=\"handleSubmitAddProduct()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n\n      <input pInputText placeholder=\"Nome\" formControlName=\"name\" />\n\n      <p-dropdown\n        styleClass=\"w-full\"\n        [options]=\"categoriesDatas\"\n        [(ngModel)]=\"selectedCategory\"\n        optionLabel=\"name\"\n        optionValue=\"id\"\n        placeholder=\"Selecione uma categoria\"\n        formControlName=\"category_id\"\n      ></p-dropdown>\n\n        <p-dropdown\n        styleClass=\"w-full\"\n        [options]=\"doadorDatas\"\n        [(ngModel)]=\"doadorCategory\"\n        optionLabel=\"name\"\n        optionValue=\"id\"\n        placeholder=\"Selecione um(a) Doador\"\n        formControlName=\"doador_id\"\n      ></p-dropdown>\n\n      <input pInputText placeholder=\"Preço\" formControlName=\"price\" />\n\n      <input pInputText placeholder=\"Descrição\" formControlName=\"description\" />\n\n      <input pInputText placeholder=\"Quantidade\" formControlName=\"amount\" />\n\n      <div\n        class=\"flex flex-row justify-content-center align-content-center align-items-center m-1\"\n      >\n        <p-button\n          [disabled]=\"!addProductForm.valid\"\n          type=\"submit\"\n          label=\"Concluir\"\n        ></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<!-- FORMULÁRIO DE EDITAR PRODUTO -->\n<div *ngIf=\"productAction?.event?.action === editProductAction\">\n  <form [formGroup]=\"editProductForm\" (ngSubmit)=\"handleSubmitEditProduct()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n      <input pInputText placeholder=\"Nome\" formControlName=\"name\" />\n      <input pInputText placeholder=\"Preço\" formControlName=\"price\" />\n      <input pInputText placeholder=\"Descrição\" formControlName=\"description\" />\n      <input\n        pInputText\n        type=\"number\"\n        placeholder=\"Quantidade\"\n        formControlName=\"amount\"\n      />\n\n      <div\n        class=\"flex flex-row justify-content-center align-content-center align-items-center\"\n      >\n        <p-button\n          [disabled]=\"!editProductForm.valid\"\n          type=\"submit\"\n          label=\"Concluir\"\n        ></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}