{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BeneficiarioEvent } from 'src/app/models/enums/beneficiario/BeneficiarioEvent';\nlet BeneficiarioFormComponent = class BeneficiarioFormComponent {\n  constructor(ref, formBuilder, messageService, beneficiarioService) {\n    this.ref = ref;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.beneficiarioService = beneficiarioService;\n    this.destroy$ = new Subject();\n    this.addBeneficiarioAction = BeneficiarioEvent.ADD_BENEFICIARIO_ACTION;\n    this.editBeneficiarioAction = BeneficiarioEvent.EDIT_BENEFICIARIO_ACTION;\n    this.beneficiarioForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      cpfCnpj: ['', [Validators.required, this.validateCpfCnpj]]\n      // Adicione outros campos conforme necessário para o formulário de beneficiário\n    });\n  }\n\n  ngOnInit() {\n    this.beneficiarioAction = this.ref.data;\n    if (this.beneficiarioAction?.event?.action === this.editBeneficiarioAction && this.beneficiarioAction?.event?.beneficiarioName !== null || undefined) {\n      this.setBeneficiarioName(this.beneficiarioAction?.event?.beneficiarioName);\n      this.setBeneficiarioCpfCnpj(this.beneficiarioAction?.event?.cpfCnpj);\n    }\n  }\n  handleSubmitBeneficiarioAction() {\n    if (this.beneficiarioAction?.event?.action === this.addBeneficiarioAction) {\n      this.handleSubmitAddBeneficiario();\n    } else if (this.beneficiarioAction?.event?.action === this.editBeneficiarioAction) {\n      this.handleSubmitEditBeneficiario();\n    }\n  }\n  handleSubmitAddBeneficiario() {\n    if (this.beneficiarioForm?.value && this.beneficiarioForm?.valid) {\n      const requestCreateBeneficiario = {\n        name: this.beneficiarioForm.value.name,\n        cpfCnpj: this.beneficiarioForm.value.cpfCnpj\n      };\n      this.beneficiarioService.createNewBeneficiario(requestCreateBeneficiario).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          if (response) {\n            this.beneficiarioForm.reset();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Beneficiário criado com sucesso!',\n              life: 3000\n            });\n          }\n        },\n        error: err => {\n          console.log(err);\n          this.beneficiarioForm.reset();\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao criar beneficiário!',\n            life: 3000\n          });\n        }\n      });\n    }\n  }\n  handleSubmitEditBeneficiario() {\n    if (this.beneficiarioForm?.value && this.beneficiarioForm?.valid && this.beneficiarioAction?.event?.beneficiario_id) {\n      const requestEditBeneficiario = {\n        name: this.beneficiarioForm?.value?.name,\n        cpfCnpj: this.beneficiarioForm?.value?.cpfCnpj,\n        beneficiario_id: this.beneficiarioAction?.event?.beneficiario_id\n      };\n      this.beneficiarioService.editBeneficiario(requestEditBeneficiario).pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => {\n          this.beneficiarioForm.reset();\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Sucesso',\n            detail: 'Beneficiário editado com sucesso!',\n            life: 3000\n          });\n        },\n        error: err => {\n          console.log(err);\n          this.beneficiarioForm.reset();\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao editar beneficiário!',\n            life: 3000\n          });\n        }\n      });\n    }\n  }\n  setBeneficiarioName(beneficiarioName) {\n    if (beneficiarioName) {\n      this.beneficiarioForm.patchValue({\n        name: beneficiarioName\n      });\n    }\n  }\n  setBeneficiarioCpfCnpj(cpfCnpj) {\n    if (cpfCnpj) {\n      this.beneficiarioForm.patchValue({\n        cpfCnpj: cpfCnpj\n      });\n    }\n  }\n  validateCpfCnpj(control) {\n    if (control.value) {\n      const cpfCnpj = control.value.toString().replace(/[^\\d]+/g, '');\n      if (cpfCnpj.length === 11) {\n        // Validação para CPF\n        if (!this.validateCPF(cpfCnpj)) {\n          return {\n            invalidCpf: true\n          };\n        }\n      } else if (cpfCnpj.length === 14) {\n        // Validação para CNPJ\n        if (!this.validateCNPJ(cpfCnpj)) {\n          return {\n            invalidCnpj: true\n          };\n        }\n      } else {\n        return {\n          invalidCpfCnpjLength: true\n        };\n      }\n    }\n    return null;\n  }\n  validateCPF(cpf) {\n    // Implemente a lógica de validação de CPF aqui\n    return true; // Exemplo simples de validação de CPF\n  }\n\n  validateCNPJ(cnpj) {\n    // Implemente a lógica de validação de CNPJ aqui\n    return true; // Exemplo simples de validação de CNPJ\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n};\nBeneficiarioFormComponent = __decorate([Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})], BeneficiarioFormComponent);\nexport { BeneficiarioFormComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Subject","takeUntil","BeneficiarioEvent","BeneficiarioFormComponent","constructor","ref","formBuilder","messageService","beneficiarioService","ADD_BENEFICIARIO_ACTION","EDIT_BENEFICIARIO_ACTION","group","name","required","cpfCnpj","validateCpfCnpj","ngOnInit","beneficiarioAction","data","event","action","editBeneficiarioAction","beneficiarioName","undefined","setBeneficiarioName","setBeneficiarioCpfCnpj","handleSubmitBeneficiarioAction","addBeneficiarioAction","handleSubmitAddBeneficiario","handleSubmitEditBeneficiario","beneficiarioForm","value","valid","requestCreateBeneficiario","createNewBeneficiario","pipe","destroy$","subscribe","next","response","reset","add","severity","summary","detail","life","error","err","console","log","beneficiario_id","requestEditBeneficiario","editBeneficiario","patchValue","control","toString","replace","length","validateCPF","invalidCpf","validateCNPJ","invalidCnpj","invalidCpfCnpjLength","cpf","cnpj","ngOnDestroy","complete","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\categories\\components\\category-form\\category-form.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BeneficiarioEvent } from 'src/app/models/enums/beneficiario/BeneficiarioEvent';\nimport { EditBeneficiarioAction } from 'src/app/models/interfaces/beneficiario/event/EditBeneficiarioAction';\nimport { BeneficiarioService } from 'src/app/services/beneficiario/beneficiario.service';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: [],\n})\nexport class BeneficiarioFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n\n  public addBeneficiarioAction = BeneficiarioEvent.ADD_BENEFICIARIO_ACTION;\n  public editBeneficiarioAction = BeneficiarioEvent.EDIT_BENEFICIARIO_ACTION;\n\n  public beneficiarioAction!: { event: EditBeneficiarioAction };\n  public beneficiarioForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    cpfCnpj: ['', [Validators.required, this.validateCpfCnpj]],\n    // Adicione outros campos conforme necessário para o formulário de beneficiário\n  });\n\n  constructor(\n    public ref: DynamicDialogConfig,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private beneficiarioService: BeneficiarioService\n  ) {}\n\n  ngOnInit(): void {\n    this.beneficiarioAction = this.ref.data;\n\n    if (\n      (this.beneficiarioAction?.event?.action === this.editBeneficiarioAction &&\n        this.beneficiarioAction?.event?.beneficiarioName !== null) ||\n      undefined\n    ) {\n      this.setBeneficiarioName(this.beneficiarioAction?.event?.beneficiarioName as string);\n      this.setBeneficiarioCpfCnpj(this.beneficiarioAction?.event?.cpfCnpj as string);\n    }\n  }\n\n  handleSubmitBeneficiarioAction(): void {\n    if (this.beneficiarioAction?.event?.action === this.addBeneficiarioAction) {\n      this.handleSubmitAddBeneficiario();\n    } else if (this.beneficiarioAction?.event?.action === this.editBeneficiarioAction) {\n      this.handleSubmitEditBeneficiario();\n    }\n  }\n\n  handleSubmitAddBeneficiario(): void {\n    if (this.beneficiarioForm?.value && this.beneficiarioForm?.valid) {\n      const requestCreateBeneficiario: { name: string; cpfCnpj: string } = {\n        name: this.beneficiarioForm.value.name as string,\n        cpfCnpj: this.beneficiarioForm.value.cpfCnpj as string,\n      };\n\n      this.beneficiarioService\n        .createNewBeneficiario(requestCreateBeneficiario)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            if (response) {\n              this.beneficiarioForm.reset();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Sucesso',\n                detail: 'Beneficiário criado com sucesso!',\n                life: 3000,\n              });\n            }\n          },\n          error: (err) => {\n            console.log(err);\n            this.beneficiarioForm.reset();\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao criar beneficiário!',\n              life: 3000,\n            });\n          },\n        });\n    }\n  }\n\n  handleSubmitEditBeneficiario(): void {\n    if (\n      this.beneficiarioForm?.value &&\n      this.beneficiarioForm?.valid &&\n      this.beneficiarioAction?.event?.beneficiario_id\n    ) {\n      const requestEditBeneficiario: {\n        name: string;\n        cpfCnpj: string;\n        beneficiario_id: string;\n      } = {\n        name: this.beneficiarioForm?.value?.name as string,\n        cpfCnpj: this.beneficiarioForm?.value?.cpfCnpj as string,\n        beneficiario_id: this.beneficiarioAction?.event?.beneficiario_id,\n      };\n\n      this.beneficiarioService\n        .editBeneficiario(requestEditBeneficiario)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.beneficiarioForm.reset();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Beneficiário editado com sucesso!',\n              life: 3000,\n            });\n          },\n          error: (err) => {\n            console.log(err);\n            this.beneficiarioForm.reset();\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao editar beneficiário!',\n              life: 3000,\n            });\n          },\n        });\n    }\n  }\n\n  setBeneficiarioName(beneficiarioName: string): void {\n    if (beneficiarioName) {\n      this.beneficiarioForm.patchValue({\n        name: beneficiarioName,\n      });\n    }\n  }\n\n  setBeneficiarioCpfCnpj(cpfCnpj: string): void {\n    if (cpfCnpj) {\n      this.beneficiarioForm.patchValue({\n        cpfCnpj: cpfCnpj,\n      });\n    }\n  }\n\n  validateCpfCnpj(control: any): { [key: string]: boolean } | null {\n    if (control.value) {\n      const cpfCnpj = control.value.toString().replace(/[^\\d]+/g, '');\n      if (cpfCnpj.length === 11) {\n        // Validação para CPF\n        if (!this.validateCPF(cpfCnpj)) {\n          return { invalidCpf: true };\n        }\n      } else if (cpfCnpj.length === 14) {\n        // Validação para CNPJ\n        if (!this.validateCNPJ(cpfCnpj)) {\n          return { invalidCnpj: true };\n        }\n      } else {\n        return { invalidCpfCnpjLength: true };\n      }\n    }\n    return null;\n  }\n\n  validateCPF(cpf: string): boolean {\n    // Implemente a lógica de validação de CPF aqui\n    return true; // Exemplo simples de validação de CPF\n  }\n\n  validateCNPJ(cnpj: string): boolean {\n    // Implemente a lógica de validação de CNPJ aqui\n    return true; // Exemplo simples de validação de CNPJ\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}