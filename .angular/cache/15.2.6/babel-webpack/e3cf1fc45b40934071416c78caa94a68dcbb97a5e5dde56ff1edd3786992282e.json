{"ast":null,"code":"import { format as formatCNPJ } from '@fnando/cnpj';\nimport * as i0 from \"@angular/core\";\nexport class CnpjMaskDirective {\n  constructor(el) {\n    this.el = el;\n  }\n  onInput(event) {\n    const value = event.target.value.replace(/\\D/g, '');\n    if (value.length > 14) {\n      event.target.value = value.slice(0, 14);\n    }\n    event.target.value = formatCNPJ(value);\n  }\n}\nCnpjMaskDirective.ɵfac = function CnpjMaskDirective_Factory(t) {\n  return new (t || CnpjMaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCnpjMaskDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: CnpjMaskDirective,\n  selectors: [[\"\", \"appCnpjMask\", \"\"]],\n  hostBindings: function CnpjMaskDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function CnpjMaskDirective_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      });\n    }\n  }\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,IAAIC,UAAU,QAAQ,cAAc;;AAKnD,OAAM,MAAOC,iBAAiB;EAC5BC,YAAoBC,EAAc;IAAd,OAAE,GAAFA,EAAE;EAAe;EAGrCC,OAAO,CAACC,KAAU;IAChB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACnD,IAAIF,KAAK,CAACG,MAAM,GAAG,EAAE,EAAE;MACrBJ,KAAK,CAACE,MAAM,CAACD,KAAK,GAAGA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;IAEzCL,KAAK,CAACE,MAAM,CAACD,KAAK,GAAGN,UAAU,CAACM,KAAK,CAAC;EACxC;;AAVWL,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAU;EAAAC;IAAA;;eAAjBC,mBAAe;MAAA","names":["format","formatCNPJ","CnpjMaskDirective","constructor","el","onInput","event","value","target","replace","length","slice","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\directive\\CNPJ\\cnpj-mask.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { format as formatCNPJ } from '@fnando/cnpj';\n\n@Directive({\n  selector: '[appCnpjMask]'\n})\nexport class CnpjMaskDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener('input', ['$event'])\n  onInput(event: any) {\n    const value = event.target.value.replace(/\\D/g, '');\n    if (value.length > 14) {\n      event.target.value = value.slice(0, 14);\n    }\n    event.target.value = formatCNPJ(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}