{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport { isValid as isValidCNPJ } from '@fnando/cnpj';\nimport * as i0 from \"@angular/core\";\nexport class CnpjValidatorDirective {\n  validate(control) {\n    const value = control.value;\n    if (value && !isValidCNPJ(value.replace(/\\D/g, ''))) {\n      return {\n        'invalidCnpj': true\n      };\n    }\n    return null;\n  }\n}\nCnpjValidatorDirective.ɵfac = function CnpjValidatorDirective_Factory(t) {\n  return new (t || CnpjValidatorDirective)();\n};\nCnpjValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: CnpjValidatorDirective,\n  selectors: [[\"\", \"appCnpjValidator\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALIDATORS,\n    useExisting: CnpjValidatorDirective,\n    multi: true\n  }])]\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAsD,gBAAgB;AAC5F,SAASC,OAAO,IAAIC,WAAW,QAAQ,cAAc;;AAMrD,OAAM,MAAOC,sBAAsB;EACjCC,QAAQ,CAACC,OAAwB;IAC/B,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B,IAAIA,KAAK,IAAI,CAACJ,WAAW,CAACI,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;MACnD,OAAO;QAAE,aAAa,EAAE;MAAI,CAAE;;IAEhC,OAAO,IAAI;EACb;;AAPWJ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAK;EAAAC,iCAFtB,CAAC;IAAEC,OAAO,EAAEV,aAAa;IAAEW,WAAW,EAAER,sBAAsB;IAAES,KAAK,EAAE;EAAI,CAAE,CAAC;AAAA","names":["NG_VALIDATORS","isValid","isValidCNPJ","CnpjValidatorDirective","validate","control","value","replace","selectors","features","provide","useExisting","multi"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\directive\\validator\\cnpj\\cnpj-validator.directive.ts"],"sourcesContent":["import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { isValid as isValidCNPJ } from '@fnando/cnpj';\n\n@Directive({\n  selector: '[appCnpjValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: CnpjValidatorDirective, multi: true }]\n})\nexport class CnpjValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (value && !isValidCNPJ(value.replace(/\\D/g, ''))) {\n      return { 'invalidCnpj': true };\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}