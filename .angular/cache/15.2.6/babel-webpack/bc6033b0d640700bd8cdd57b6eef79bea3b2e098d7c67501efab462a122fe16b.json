{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isValid as isValidCNPJ } from '@fnando/cnpj';\nimport { isValid as isValidCPF } from '@fnando/cpf';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/dynamicdialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/beneficiario/beneficiario.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/inputtextarea\";\nimport * as i9 from \"primeng/dropdown\";\nfunction BeneficiarioFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 17)(2, \"input\", 18)(3, \"input\", 19)(4, \"p-dropdown\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.generos);\n  }\n}\nfunction BeneficiarioFormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 21)(2, \"input\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BeneficiarioFormComponent {\n  constructor(ref, formBuilder, messageService, beneficiarioService) {\n    this.ref = ref;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.beneficiarioService = beneficiarioService;\n    this.destroy$ = new Subject();\n    this.isEditing = false;\n    this.beneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      tipoPessoa: ['F', Validators.required],\n      cpf: ['', this.cpfValidator],\n      rg: [''],\n      genero: ['', Validators.required],\n      dataNascimento: [''],\n      cnpj: ['', this.cnpjValidator],\n      razaoSocial: [''],\n      contato1: ['', Validators.required],\n      contato2: [''],\n      cep: ['', Validators.required],\n      logradouro: ['', Validators.required],\n      numero: ['', Validators.required],\n      complemento: ['', Validators.required],\n      bairro: ['', Validators.required],\n      cidade: ['', Validators.required],\n      siglaEstado: ['', Validators.required],\n      observacoes: [''],\n      ativo: [true]\n    });\n    this.estados = [{\n      label: 'Acre',\n      value: 'AC'\n    }, {\n      label: 'Alagoas',\n      value: 'AL'\n    }, {\n      label: 'Amapá',\n      value: 'AP'\n    }, {\n      label: 'Amazonas',\n      value: 'AM'\n    }, {\n      label: 'Bahia',\n      value: 'BA'\n    }, {\n      label: 'Ceará',\n      value: 'CE'\n    }, {\n      label: 'Distrito Federal',\n      value: 'DF'\n    }, {\n      label: 'Espírito Santo',\n      value: 'ES'\n    }, {\n      label: 'Goiás',\n      value: 'GO'\n    }, {\n      label: 'Maranhão',\n      value: 'MA'\n    }, {\n      label: 'Mato Grosso',\n      value: 'MT'\n    }, {\n      label: 'Mato Grosso do Sul',\n      value: 'MS'\n    }, {\n      label: 'Minas Gerais',\n      value: 'MG'\n    }, {\n      label: 'Pará',\n      value: 'PA'\n    }, {\n      label: 'Paraíba',\n      value: 'PB'\n    }, {\n      label: 'Paraná',\n      value: 'PR'\n    }, {\n      label: 'Pernambuco',\n      value: 'PE'\n    }, {\n      label: 'Piauí',\n      value: 'PI'\n    }, {\n      label: 'Rio de Janeiro',\n      value: 'RJ'\n    }, {\n      label: 'Rio Grande do Norte',\n      value: 'RN'\n    }, {\n      label: 'Rio Grande do Sul',\n      value: 'RS'\n    }, {\n      label: 'Rondônia',\n      value: 'RO'\n    }, {\n      label: 'Roraima',\n      value: 'RR'\n    }, {\n      label: 'Santa Catarina',\n      value: 'SC'\n    }, {\n      label: 'São Paulo',\n      value: 'SP'\n    }, {\n      label: 'Sergipe',\n      value: 'SE'\n    }, {\n      label: 'Tocantins',\n      value: 'TO'\n    }];\n    this.tiposPessoa = [{\n      label: 'Pessoa Física',\n      value: 'F'\n    }, {\n      label: 'Pessoa Jurídica',\n      value: 'J'\n    }];\n    this.generos = [{\n      label: 'Masculino',\n      value: 'M'\n    }, {\n      label: 'Feminino',\n      value: 'F'\n    }];\n  }\n  ngOnInit() {\n    const beneficiarioData = this.ref.data;\n    if (beneficiarioData) {\n      this.isEditing = !!beneficiarioData.id;\n      this.populateForm(beneficiarioData);\n    }\n  }\n  handleSubmit() {\n    if (this.beneficiarioForm.valid) {\n      const formData = this.beneficiarioForm.value;\n      if (this.isEditing) {\n        this.editBeneficiario(formData);\n      } else {\n        this.addBeneficiario(formData);\n      }\n    } else {\n      this.handleErrorMessage('Formulário inválido. Verifique os campos obrigatórios.');\n    }\n  }\n  addBeneficiario(formData) {\n    this.beneficiarioService['createBeneficiario'](formData).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário criado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao criar beneficiário!');\n      }\n    });\n  }\n  editBeneficiario(formData) {\n    const editAction = {\n      action: 'edit',\n      id: formData.id,\n      beneficiarioName: formData.nome\n    };\n    this.beneficiarioService['editBeneficiario'](editAction).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário editado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao editar beneficiário!');\n      }\n    });\n  }\n  populateForm(beneficiario) {\n    this.beneficiarioForm.patchValue({\n      nome: beneficiario.nome,\n      tipoPessoa: beneficiario.tipoPessoa,\n      cpf: beneficiario.cpf,\n      rg: beneficiario.rg,\n      genero: beneficiario.genero,\n      dataNascimento: beneficiario.dataNascimento,\n      cnpj: beneficiario.cnpj,\n      razaoSocial: beneficiario.razaoSocial,\n      contato1: beneficiario.contato1,\n      contato2: beneficiario.contato2,\n      cep: beneficiario.cep,\n      logradouro: beneficiario.logradouro,\n      numero: beneficiario.numero,\n      complemento: beneficiario.complemento,\n      bairro: beneficiario.bairro,\n      cidade: beneficiario.cidade,\n      siglaEstado: beneficiario.siglaEstado,\n      observacoes: beneficiario.observacoes,\n      ativo: beneficiario.ativo\n    });\n  }\n  handleSuccessMessage(message) {\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Sucesso',\n      detail: message\n    });\n  }\n  handleErrorMessage(message) {\n    this.messageService.add({\n      severity: 'error',\n      summary: 'Erro',\n      detail: message\n    });\n  }\n  cpfValidator(control) {\n    const value = control.value;\n    if (value && !isValidCPF(value.replace(/\\D/g, ''))) {\n      return {\n        'invalidCpf': true\n      };\n    }\n    return null;\n  }\n  cnpjValidator(control) {\n    const value = control.value;\n    if (value && !isValidCNPJ(value.replace(/\\D/g, ''))) {\n      return {\n        'invalidCnpj': true\n      };\n    }\n    return null;\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nBeneficiarioFormComponent.ɵfac = function BeneficiarioFormComponent_Factory(t) {\n  return new (t || BeneficiarioFormComponent)(i0.ɵɵdirectiveInject(i1.DynamicDialogConfig), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.BeneficiarioService));\n};\nBeneficiarioFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BeneficiarioFormComponent,\n  selectors: [[\"app-beneficiario-form\"]],\n  decls: 19,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"flex\", \"flex-column\", \"md:flex-column\", \"gap-3\"], [\"pInputText\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"nome\"], [\"formControlName\", \"tipoPessoa\", \"placeholder\", \"Selecione o Tipo de Pessoa\", 3, \"options\"], [\"formControlName\", \"siglaEstado\", \"placeholder\", \"Selecione um Estado\", 3, \"options\"], [4, \"ngIf\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 1\", \"maxlength\", \"11\", \"type\", \"number\", \"formControlName\", \"contato1\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 2\", \"maxlength\", \"11\", \"formControlName\", \"contato2\"], [\"pInputText\", \"\", \"placeholder\", \"CEP\", \"type\", \"number\", \"maxlength\", \"8\", \"formControlName\", \"cep\"], [\"pInputText\", \"\", \"placeholder\", \"Rua\", \"formControlName\", \"logradouro\"], [\"pInputText\", \"\", \"placeholder\", \"N\\u00FAmero\", \"formControlName\", \"numero\"], [\"pInputText\", \"\", \"placeholder\", \"Complemento\", \"formControlName\", \"complemento\"], [\"pInputText\", \"\", \"placeholder\", \"Bairro\", \"formControlName\", \"bairro\"], [\"pInputText\", \"\", \"placeholder\", \"Cidade\", \"formControlName\", \"cidade\"], [\"pInputTextarea\", \"\", \"placeholder\", \"Observa\\u00E7\\u00F5es\", \"formControlName\", \"observacoes\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\"], [\"type\", \"submit\", \"label\", \"Concluir\", 3, \"disabled\"], [\"appCpfMask\", \"\", \"appCpfValidator\", \"\", \"pInputText\", \"\", \"placeholder\", \"CPF\", \"formControlName\", \"cpf\", 2, \"margin-right\", \"13px!important\"], [\"maxlength\", \"9\", \"pInputText\", \"\", \"placeholder\", \"RG\", \"formControlName\", \"rg\", 2, \"margin-right\", \"13px!important\"], [\"type\", \"date\", \"pInputText\", \"\", \"placeholder\", \"Data de Nascimento\", \"formControlName\", \"dataNascimento\", 2, \"margin-right\", \"13px!important\"], [\"formControlName\", \"genero\", \"placeholder\", \"Selecione o G\\u00EAnero\", 3, \"options\"], [\"pInputText\", \"\", \"appCnpjMask\", \"\", \"appCnpjValidator\", \"\", \"placeholder\", \"CNPJ\", \"formControlName\", \"cnpj\", 2, \"margin-right\", \"10px\"], [\"pInputText\", \"\", \"placeholder\", \"Raz\\u00E3o Social\", \"formControlName\", \"razaoSocial\"]],\n  template: function BeneficiarioFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function BeneficiarioFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.handleSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"input\", 2)(4, \"p-dropdown\", 3)(5, \"p-dropdown\", 4);\n      i0.ɵɵtemplate(6, BeneficiarioFormComponent_div_6_Template, 5, 1, \"div\", 5);\n      i0.ɵɵtemplate(7, BeneficiarioFormComponent_div_7_Template, 3, 0, \"div\", 5);\n      i0.ɵɵelement(8, \"input\", 6)(9, \"input\", 7)(10, \"input\", 8)(11, \"input\", 9)(12, \"input\", 10)(13, \"input\", 11)(14, \"input\", 12)(15, \"input\", 13)(16, \"textarea\", 14);\n      i0.ɵɵelementStart(17, \"div\", 15);\n      i0.ɵɵelement(18, \"p-button\", 16);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.beneficiarioForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"options\", ctx.tiposPessoa);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.estados);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.beneficiarioForm.get(\"tipoPessoa\")) == null ? null : tmp_3_0.value) === \"F\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.beneficiarioForm.get(\"tipoPessoa\")) == null ? null : tmp_4_0.value) === \"J\");\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"disabled\", !ctx.beneficiarioForm.valid);\n    }\n  },\n  dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.Button, i7.InputText, i8.InputTextarea, i9.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAsD,gBAAgB;AAGtG,SAASC,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,QAAQ,gBAAgB;AAI1C,SAASC,OAAO,IAAIC,WAAW,QAAQ,cAAc;AACrD,SAASD,OAAO,IAAIE,UAAU,QAAQ,aAAa;;;;;;;;;;;;;ICM7CC,2BAA+D;IAC7DA,4BAA4H;IAQ9HA,iBAAM;;;;IAJFA,eAAmB;IAAnBA,wCAAmB;;;;;IAMvBA,2BAA+D;IAC7DA,4BAAwH;IAE1HA,iBAAM;;;ADbZ,OAAM,MAAOC,yBAAyB;EASpCC,YACSC,GAAwB,EACvBC,WAAwB,EACxBC,cAA8B,EAC9BC,mBAAwC;IAHzC,QAAG,GAAHH,GAAG;IACF,gBAAW,GAAXC,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;IAZZ,aAAQ,GAAkB,IAAIX,OAAO,EAAE;IAGjD,cAAS,GAAG,KAAK;IAWtB,IAAI,CAACY,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC7CC,IAAI,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MAC/BC,UAAU,EAAE,CAAC,GAAG,EAAEjB,UAAU,CAACgB,QAAQ,CAAC;MACtCE,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,CAACC,YAAY,CAAC;MAC5BC,EAAE,EAAE,CAAC,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACgB,QAAQ,CAAC;MACjCM,cAAc,EAAE,CAAC,EAAE,CAAC;MACpBC,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,CAACC,aAAa,CAAC;MAC9BC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,QAAQ,EAAE,CAAC,EAAE,EAAE1B,UAAU,CAACgB,QAAQ,CAAC;MACnCW,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,GAAG,EAAE,CAAC,EAAE,EAAE5B,UAAU,CAACgB,QAAQ,CAAC;MAC9Ba,UAAU,EAAE,CAAC,EAAE,EAAE7B,UAAU,CAACgB,QAAQ,CAAC;MACrCc,MAAM,EAAE,CAAC,EAAE,EAAE9B,UAAU,CAACgB,QAAQ,CAAC;MACjCe,WAAW,EAAE,CAAC,EAAE,EAAE/B,UAAU,CAACgB,QAAQ,CAAC;MACtCgB,MAAM,EAAE,CAAC,EAAE,EAAEhC,UAAU,CAACgB,QAAQ,CAAC;MACjCiB,MAAM,EAAE,CAAC,EAAE,EAAEjC,UAAU,CAACgB,QAAQ,CAAC;MACjCkB,WAAW,EAAE,CAAC,EAAE,EAAElC,UAAU,CAACgB,QAAQ,CAAC;MACtCmB,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,KAAK,EAAE,CAAC,IAAI;KACb,CAAC;IAGF,IAAI,CAACC,OAAO,GAAG,CACb;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAI,CAAE,EACjC;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC/B;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAI,CAAE,EAClC;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC/B;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC/B;MAAED,KAAK,EAAE,kBAAkB;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC1C;MAAED,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAI,CAAE,EACxC;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC/B;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAI,CAAE,EAClC;MAAED,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAI,CAAE,EACrC;MAAED,KAAK,EAAE,oBAAoB;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC5C;MAAED,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAI,CAAE,EACtC;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAI,CAAE,EACjC;MAAED,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAI,CAAE,EAChC;MAAED,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAI,CAAE,EACpC;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC/B;MAAED,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAI,CAAE,EACxC;MAAED,KAAK,EAAE,qBAAqB;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC7C;MAAED,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE;IAAI,CAAE,EAC3C;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAI,CAAE,EAClC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAI,CAAE,EACjC;MAAED,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAI,CAAE,EACxC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAI,CAAE,EACnC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAI,CAAE,EACjC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAI,CAAE,CACpC;IAED,IAAI,CAACC,WAAW,GAAG,CACjB;MAAEF,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAG,CAAE,EACtC;MAAED,KAAK,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAG,CAAE,CACzC;IAED,IAAI,CAACE,OAAO,GAAG,CACb;MAAEH,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAG,CAAE,EAClC;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAG,CAAE,CAClC;EACH;EAEAG,QAAQ;IACN,MAAMC,gBAAgB,GAAG,IAAI,CAAClC,GAAG,CAACmC,IAAI;IAEtC,IAAID,gBAAgB,EAAE;MACpB,IAAI,CAACE,SAAS,GAAG,CAAC,CAACF,gBAAgB,CAACG,EAAE;MACtC,IAAI,CAACC,YAAY,CAACJ,gBAAgB,CAAC;;EAEvC;EAEAK,YAAY;IACV,IAAI,IAAI,CAACnC,gBAAgB,CAACoC,KAAK,EAAE;MAC/B,MAAMC,QAAQ,GAAG,IAAI,CAACrC,gBAAgB,CAAC0B,KAAK;MAE5C,IAAI,IAAI,CAACM,SAAS,EAAE;QAClB,IAAI,CAACM,gBAAgB,CAACD,QAAQ,CAAC;OAChC,MAAM;QACL,IAAI,CAACE,eAAe,CAACF,QAAQ,CAAC;;KAEjC,MAAM;MACL,IAAI,CAACG,kBAAkB,CAAC,wDAAwD,CAAC;;EAErF;EAEQD,eAAe,CAACF,QAAa;IACnC,IAAI,CAACtC,mBAAmB,CAAC,oBAAoB,CAAC,CAACsC,QAAQ,CAAC,CAACI,IAAI,CAACpD,SAAS,CAAC,IAAI,CAACqD,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC;MAChGC,IAAI,EAAE,MAAK;QACT,IAAI,CAACC,oBAAoB,CAAC,kCAAkC,CAAC;MAC/D,CAAC;MACDC,KAAK,EAAE,MAAK;QACV,IAAI,CAACN,kBAAkB,CAAC,6BAA6B,CAAC;MACxD;KACD,CAAC;EACJ;EAEQF,gBAAgB,CAACD,QAAa;IACpC,MAAMU,UAAU,GAA2B;MACzCC,MAAM,EAAE,MAAM;MACdf,EAAE,EAAEI,QAAQ,CAACJ,EAAE;MACfgB,gBAAgB,EAAEZ,QAAQ,CAACnC;KAC5B;IAED,IAAI,CAACH,mBAAmB,CAAC,kBAAkB,CAAC,CAACgD,UAAU,CAAC,CAACN,IAAI,CAACpD,SAAS,CAAC,IAAI,CAACqD,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC;MAChGC,IAAI,EAAE,MAAK;QACT,IAAI,CAACC,oBAAoB,CAAC,mCAAmC,CAAC;MAChE,CAAC;MACDC,KAAK,EAAE,MAAK;QACV,IAAI,CAACN,kBAAkB,CAAC,8BAA8B,CAAC;MACzD;KACD,CAAC;EACJ;EAEQN,YAAY,CAACgB,YAAqC;IACxD,IAAI,CAAClD,gBAAgB,CAACmD,UAAU,CAAC;MAC/BjD,IAAI,EAAEgD,YAAY,CAAChD,IAAI;MACvBE,UAAU,EAAE8C,YAAY,CAAC9C,UAAU;MACnCC,GAAG,EAAE6C,YAAY,CAAC7C,GAAG;MACrBE,EAAE,EAAE2C,YAAY,CAAC3C,EAAE;MACnBC,MAAM,EAAE0C,YAAY,CAAC1C,MAAM;MAC3BC,cAAc,EAAEyC,YAAY,CAACzC,cAAc;MAC3CC,IAAI,EAAEwC,YAAY,CAACxC,IAAI;MACvBE,WAAW,EAAEsC,YAAY,CAACtC,WAAW;MACrCC,QAAQ,EAAEqC,YAAY,CAACrC,QAAQ;MAC/BC,QAAQ,EAAEoC,YAAY,CAACpC,QAAQ;MAC/BC,GAAG,EAAEmC,YAAY,CAACnC,GAAG;MACrBC,UAAU,EAAEkC,YAAY,CAAClC,UAAU;MACnCC,MAAM,EAAEiC,YAAY,CAACjC,MAAM;MAC3BC,WAAW,EAAEgC,YAAY,CAAChC,WAAW;MACrCC,MAAM,EAAE+B,YAAY,CAAC/B,MAAM;MAC3BC,MAAM,EAAE8B,YAAY,CAAC9B,MAAM;MAC3BC,WAAW,EAAE6B,YAAY,CAAC7B,WAAW;MACrCC,WAAW,EAAE4B,YAAY,CAAC5B,WAAW;MACrCC,KAAK,EAAE2B,YAAY,CAAC3B;KACrB,CAAC;EACJ;EAEQsB,oBAAoB,CAACO,OAAe;IAC1C,IAAI,CAACtD,cAAc,CAACuD,GAAG,CAAC;MAAEC,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE,SAAS;MAAEC,MAAM,EAAEJ;IAAO,CAAE,CAAC;EACvF;EAEQZ,kBAAkB,CAACY,OAAe;IACxC,IAAI,CAACtD,cAAc,CAACuD,GAAG,CAAC;MAAEC,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAEJ;IAAO,CAAE,CAAC;EAClF;EAEA9C,YAAY,CAACmD,OAAwB;IACnC,MAAM/B,KAAK,GAAG+B,OAAO,CAAC/B,KAAK;IAC3B,IAAIA,KAAK,IAAI,CAAClC,UAAU,CAACkC,KAAK,CAACgC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;MAClD,OAAO;QAAE,YAAY,EAAE;MAAI,CAAE;;IAE/B,OAAO,IAAI;EACb;EAEA/C,aAAa,CAAC8C,OAAwB;IACpC,MAAM/B,KAAK,GAAG+B,OAAO,CAAC/B,KAAK;IAC3B,IAAIA,KAAK,IAAI,CAACnC,WAAW,CAACmC,KAAK,CAACgC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;MACnD,OAAO;QAAE,aAAa,EAAE;MAAI,CAAE;;IAEhC,OAAO,IAAI;EACb;EAEAC,WAAW;IACT,IAAI,CAACjB,QAAQ,CAACE,IAAI,EAAE;IACpB,IAAI,CAACF,QAAQ,CAACkB,QAAQ,EAAE;EAC1B;;AArLWlE,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAmE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBtCxE,2BAAK;MACkCA;QAAA,OAAYyE,kBAAc;MAAA,EAAC;MAC9DzE,8BAAwD;MACtDA,2BAA8D;MAa9DA,0EASM;MAENA,0EAGM;MAENA,2BAAoG;MAYpGA,gCAA0F;MACxFA,gCAAyF;MAC3FA,iBAAM;;;;;MA7CJA,eAA8B;MAA9BA,gDAA8B;MAI9BA,eAAuB;MAAvBA,yCAAuB;MAMvBA,eAAmB;MAAnBA,qCAAmB;MAKfA,eAAuD;MAAvDA,kHAAuD;MAWvDA,eAAuD;MAAvDA,kHAAuD;MAkBjDA,gBAAoC;MAApCA,sDAAoC","names":["Validators","Subject","takeUntil","isValid","isValidCNPJ","isValidCPF","i0","BeneficiarioFormComponent","constructor","ref","formBuilder","messageService","beneficiarioService","beneficiarioForm","group","nome","required","tipoPessoa","cpf","cpfValidator","rg","genero","dataNascimento","cnpj","cnpjValidator","razaoSocial","contato1","contato2","cep","logradouro","numero","complemento","bairro","cidade","siglaEstado","observacoes","ativo","estados","label","value","tiposPessoa","generos","ngOnInit","beneficiarioData","data","isEditing","id","populateForm","handleSubmit","valid","formData","editBeneficiario","addBeneficiario","handleErrorMessage","pipe","destroy$","subscribe","next","handleSuccessMessage","error","editAction","action","beneficiarioName","beneficiario","patchValue","message","add","severity","summary","detail","control","replace","ngOnDestroy","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BeneficiarioService } from 'src/app/services/beneficiario/beneficiario.service';\nimport { GetBeneficiarioResponse } from 'src/app/models/interfaces/beneficiario/responses/GetBeneficiarioResponse';\nimport { EditBeneficiarioAction } from 'src/app/models/interfaces/beneficiario/event/EditBeneficiarioAction';\nimport { isValid as isValidCNPJ } from '@fnando/cnpj';\nimport { isValid as isValidCPF } from '@fnando/cpf';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})\nexport class BeneficiarioFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n\n  public beneficiarioForm: FormGroup;\n  public isEditing = false; \n  public estados: any[]; \n  public tiposPessoa: any[]; \n  public generos: any[]; \n\n  constructor(\n    public ref: DynamicDialogConfig,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private beneficiarioService: BeneficiarioService\n  ) {\n    this.beneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      tipoPessoa: ['F', Validators.required], \n      cpf: ['', this.cpfValidator],\n      rg: [''],\n      genero: ['', Validators.required],\n      dataNascimento: [''],\n      cnpj: ['', this.cnpjValidator],\n      razaoSocial: [''], \n      contato1: ['', Validators.required],\n      contato2: [''],\n      cep: ['', Validators.required],\n      logradouro: ['', Validators.required],\n      numero: ['', Validators.required],\n      complemento: ['', Validators.required],\n      bairro: ['', Validators.required],\n      cidade: ['', Validators.required],\n      siglaEstado: ['', Validators.required],\n      observacoes: [''],\n      ativo: [true] \n    });\n\n\n    this.estados = [\n      { label: 'Acre', value: 'AC' },\n      { label: 'Alagoas', value: 'AL' },\n      { label: 'Amapá', value: 'AP' },\n      { label: 'Amazonas', value: 'AM' },\n      { label: 'Bahia', value: 'BA' },\n      { label: 'Ceará', value: 'CE' },\n      { label: 'Distrito Federal', value: 'DF' },\n      { label: 'Espírito Santo', value: 'ES' },\n      { label: 'Goiás', value: 'GO' },\n      { label: 'Maranhão', value: 'MA' },\n      { label: 'Mato Grosso', value: 'MT' },\n      { label: 'Mato Grosso do Sul', value: 'MS' },\n      { label: 'Minas Gerais', value: 'MG' },\n      { label: 'Pará', value: 'PA' },\n      { label: 'Paraíba', value: 'PB' },\n      { label: 'Paraná', value: 'PR' },\n      { label: 'Pernambuco', value: 'PE' },\n      { label: 'Piauí', value: 'PI' },\n      { label: 'Rio de Janeiro', value: 'RJ' },\n      { label: 'Rio Grande do Norte', value: 'RN' },\n      { label: 'Rio Grande do Sul', value: 'RS' },\n      { label: 'Rondônia', value: 'RO' },\n      { label: 'Roraima', value: 'RR' },\n      { label: 'Santa Catarina', value: 'SC' },\n      { label: 'São Paulo', value: 'SP' },\n      { label: 'Sergipe', value: 'SE' },\n      { label: 'Tocantins', value: 'TO' }\n    ];\n\n    this.tiposPessoa = [\n      { label: 'Pessoa Física', value: 'F' },\n      { label: 'Pessoa Jurídica', value: 'J' }\n    ];\n\n    this.generos = [\n      { label: 'Masculino', value: 'M' },\n      { label: 'Feminino', value: 'F' }\n    ];\n  }\n\n  ngOnInit(): void {\n    const beneficiarioData = this.ref.data;\n\n    if (beneficiarioData) {\n      this.isEditing = !!beneficiarioData.id; \n      this.populateForm(beneficiarioData);\n    }\n  }\n\n  handleSubmit(): void {\n    if (this.beneficiarioForm.valid) {\n      const formData = this.beneficiarioForm.value;\n\n      if (this.isEditing) {\n        this.editBeneficiario(formData);\n      } else {\n        this.addBeneficiario(formData);\n      }\n    } else {\n      this.handleErrorMessage('Formulário inválido. Verifique os campos obrigatórios.');\n    }\n  }\n\n  private addBeneficiario(formData: any): void {\n    this.beneficiarioService['createBeneficiario'](formData).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário criado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao criar beneficiário!');\n      }\n    });\n  }\n\n  private editBeneficiario(formData: any): void {\n    const editAction: EditBeneficiarioAction = {\n      action: 'edit',\n      id: formData.id,\n      beneficiarioName: formData.nome\n    };\n\n    this.beneficiarioService['editBeneficiario'](editAction).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário editado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao editar beneficiário!');\n      }\n    });\n  }\n\n  private populateForm(beneficiario: GetBeneficiarioResponse): void {\n    this.beneficiarioForm.patchValue({\n      nome: beneficiario.nome,\n      tipoPessoa: beneficiario.tipoPessoa,\n      cpf: beneficiario.cpf,\n      rg: beneficiario.rg,\n      genero: beneficiario.genero,\n      dataNascimento: beneficiario.dataNascimento,\n      cnpj: beneficiario.cnpj,\n      razaoSocial: beneficiario.razaoSocial,\n      contato1: beneficiario.contato1,\n      contato2: beneficiario.contato2,\n      cep: beneficiario.cep,\n      logradouro: beneficiario.logradouro,\n      numero: beneficiario.numero,\n      complemento: beneficiario.complemento,\n      bairro: beneficiario.bairro,\n      cidade: beneficiario.cidade,\n      siglaEstado: beneficiario.siglaEstado,\n      observacoes: beneficiario.observacoes,\n      ativo: beneficiario.ativo\n    });\n  }\n\n  private handleSuccessMessage(message: string): void {\n    this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: message });\n  }\n\n  private handleErrorMessage(message: string): void {\n    this.messageService.add({ severity: 'error', summary: 'Erro', detail: message });\n  }\n\n  cpfValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (value && !isValidCPF(value.replace(/\\D/g, ''))) {\n      return { 'invalidCpf': true };\n    }\n    return null;\n  }\n\n  cnpjValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (value && !isValidCNPJ(value.replace(/\\D/g, ''))) {\n      return { 'invalidCnpj': true };\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div>\n  <form [formGroup]=\"beneficiarioForm\" (ngSubmit)=\"handleSubmit()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n      <input pInputText placeholder=\"Nome\" formControlName=\"nome\" />\n      <p-dropdown  \n        [options]=\"tiposPessoa\" \n        formControlName=\"tipoPessoa\" \n        placeholder=\"Selecione o Tipo de Pessoa\">\n      </p-dropdown>\n      \n      <p-dropdown \n        [options]=\"estados\" \n        formControlName=\"siglaEstado\" \n        placeholder=\"Selecione um Estado\">\n      </p-dropdown>\n\n      <div *ngIf=\"beneficiarioForm.get('tipoPessoa')?.value === 'F'\">\n        <input style=\"margin-right: 13px!important\" appCpfMask appCpfValidator pInputText placeholder=\"CPF\" formControlName=\"cpf\" />\n        <input style=\"margin-right: 13px!important\" maxlength=\"9\" pInputText placeholder=\"RG\" formControlName=\"rg\" />\n        <input style=\"margin-right: 13px!important\" type=\"date\" pInputText placeholder=\"Data de Nascimento\" formControlName=\"dataNascimento\" />\n        <p-dropdown \n          [options]=\"generos\" \n          formControlName=\"genero\" \n          placeholder=\"Selecione o Gênero\">\n        </p-dropdown>\n      </div>\n\n      <div *ngIf=\"beneficiarioForm.get('tipoPessoa')?.value === 'J'\">\n        <input pInputText style=\"margin-right: 10px;\"  appCnpjMask appCnpjValidator placeholder=\"CNPJ\" formControlName=\"cnpj\" />\n        <input pInputText placeholder=\"Razão Social\" formControlName=\"razaoSocial\" />\n      </div>\n\n      <input pInputText placeholder=\"Contato 1\" maxlength=\"11\" type=\"number\" formControlName=\"contato1\" />\n      <input pInputText placeholder=\"Contato 2\" maxlength=\"11\"  formControlName=\"contato2\" />\n      <input pInputText placeholder=\"CEP\" type=\"number\" maxlength=\"8\"  formControlName=\"cep\" />\n      <input pInputText placeholder=\"Rua\" formControlName=\"logradouro\" />\n      <input pInputText placeholder=\"Número\" formControlName=\"numero\" />\n      <input pInputText placeholder=\"Complemento\" formControlName=\"complemento\" />\n      <input pInputText placeholder=\"Bairro\" formControlName=\"bairro\" />\n      <input pInputText placeholder=\"Cidade\" formControlName=\"cidade\" />\n\n\n      <textarea pInputTextarea placeholder=\"Observações\" formControlName=\"observacoes\"></textarea>\n\n      <div class=\"flex flex-row justify-content-center align-content-center align-items-center\">\n        <p-button [disabled]=\"!beneficiarioForm.valid\" type=\"submit\" label=\"Concluir\"></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}