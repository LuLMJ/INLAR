{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { CategoryEvent } from 'src/app/models/enums/categories/CategoryEvent';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/dynamicdialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/categories/categories.service\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nexport class CategoryFormComponent {\n  constructor(ref, formBuilder, messageService, categoriesService) {\n    this.ref = ref;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.categoriesService = categoriesService;\n    this.destroy$ = new Subject();\n    this.addCategoryAction = CategoryEvent.ADD_CATEGORY_ACTION;\n    this.editCategoryAction = CategoryEvent.EDIT_CATEGORY_ACTION;\n    this.categoryForm = this.formBuilder.group({\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.categoryAction = this.ref.data;\n    if (this.categoryAction?.event?.action === this.editCategoryAction && this.categoryAction?.event?.categoryName !== null || undefined) {\n      this.setCategoryName(this.categoryAction?.event?.categoryName);\n    }\n  }\n  handleSubmitCategoryAction() {\n    if (this.categoryAction?.event?.action === this.addCategoryAction) {\n      this.handleSubmitAddCategory();\n    } else if (this.categoryAction?.event?.action === this.editCategoryAction) {\n      this.handleSubmitEditCategory();\n    }\n    return;\n  }\n  handleSubmitAddCategory() {\n    if (this.categoryForm?.value && this.categoryForm?.valid) {\n      const requestCreateCategory = {\n        name: this.categoryForm.value.name\n      };\n      this.categoriesService.createNewCategory(requestCreateCategory).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          if (response) {\n            this.categoryForm.reset();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Categoria criada com sucesso!',\n              life: 3000\n            });\n          }\n        },\n        error: err => {\n          console.log(err);\n          this.categoryForm.reset();\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao criar categoria!',\n            life: 3000\n          });\n        }\n      });\n    }\n  }\n  handleSubmitEditCategory() {\n    if (this.categoryForm?.value && this.categoryForm?.valid && this.categoryAction?.event?.id) {\n      const requestEditCategory = {\n        name: this.categoryForm?.value?.name,\n        category_id: this.categoryAction?.event?.id\n      };\n      this.categoriesService.editCategoryName(requestEditCategory).pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => {\n          this.categoryForm.reset();\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Sucesso',\n            detail: 'Categoria editada com sucesso!',\n            life: 3000\n          });\n        },\n        error: err => {\n          console.log(err);\n          this.categoryForm.reset();\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao editar categoria!',\n            life: 3000\n          });\n        }\n      });\n    }\n  }\n  setCategoryName(categoryName) {\n    if (categoryName) {\n      this.categoryForm.setValue({\n        name: categoryName\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nCategoryFormComponent.ɵfac = function CategoryFormComponent_Factory(t) {\n  return new (t || CategoryFormComponent)(i0.ɵɵdirectiveInject(i1.DynamicDialogConfig), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.CategoriesService));\n};\nCategoryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoryFormComponent,\n  selectors: [[\"app-category-form\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"flex\", \"flex-column\", \"md:flex-column\", \"gap-3\"], [\"pInputText\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"name\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\"], [\"type\", \"submit\", \"label\", \"Concluir\", 3, \"disabled\"]],\n  template: function CategoryFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.handleSubmitCategoryAction();\n      });\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"p-button\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.categoryForm.valid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.Button, i6.InputText],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","Subject","takeUntil","CategoryEvent","CategoryFormComponent","constructor","ref","formBuilder","messageService","categoriesService","ADD_CATEGORY_ACTION","EDIT_CATEGORY_ACTION","group","name","required","ngOnInit","categoryAction","data","event","action","editCategoryAction","categoryName","undefined","setCategoryName","handleSubmitCategoryAction","addCategoryAction","handleSubmitAddCategory","handleSubmitEditCategory","categoryForm","value","valid","requestCreateCategory","createNewCategory","pipe","destroy$","subscribe","next","response","reset","add","severity","summary","detail","life","error","err","console","log","id","requestEditCategory","category_id","editCategoryName","setValue","ngOnDestroy","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\categories\\components\\category-form\\category-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\categories\\components\\category-form\\category-form.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject, takeUntil } from 'rxjs';\nimport { CategoryEvent } from 'src/app/models/enums/categories/CategoryEvent';\nimport { EditCategoryAction } from 'src/app/models/interfaces/categories/event/EditCategoryAction';\nimport { CategoriesService } from 'src/app/services/categories/categories.service';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: [],\n})\nexport class CategoryFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n\n  public addCategoryAction = CategoryEvent.ADD_CATEGORY_ACTION;\n  public editCategoryAction = CategoryEvent.EDIT_CATEGORY_ACTION;\n\n  public categoryAction!: { event: EditCategoryAction };\n  public categoryForm = this.formBuilder.group({\n    name: ['', Validators.required],\n  });\n\n  constructor(\n    public ref: DynamicDialogConfig,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit(): void {\n    this.categoryAction = this.ref.data;\n\n    if (\n      (this.categoryAction?.event?.action === this.editCategoryAction &&\n        this.categoryAction?.event?.categoryName !== null) ||\n      undefined\n    ) {\n      this.setCategoryName(this.categoryAction?.event?.categoryName as string);\n    }\n  }\n\n  handleSubmitCategoryAction(): void {\n    if (this.categoryAction?.event?.action === this.addCategoryAction) {\n      this.handleSubmitAddCategory();\n    } else if (this.categoryAction?.event?.action === this.editCategoryAction) {\n      this.handleSubmitEditCategory();\n    }\n\n    return;\n  }\n\n  handleSubmitAddCategory(): void {\n    if (this.categoryForm?.value && this.categoryForm?.valid) {\n      const requestCreateCategory: { name: string } = {\n        name: this.categoryForm.value.name as string,\n      };\n\n      this.categoriesService\n        .createNewCategory(requestCreateCategory)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            if (response) {\n              this.categoryForm.reset();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Sucesso',\n                detail: 'Categoria criada com sucesso!',\n                life: 3000,\n              });\n            }\n          },\n          error: (err) => {\n            console.log(err);\n            this.categoryForm.reset();\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao criar categoria!',\n              life: 3000,\n            });\n          },\n        });\n    }\n  }\n\n  handleSubmitEditCategory(): void {\n    if (\n      this.categoryForm?.value &&\n      this.categoryForm?.valid &&\n      this.categoryAction?.event?.id\n    ) {\n      const requestEditCategory: { name: string; category_id: string } = {\n        name: this.categoryForm?.value?.name as string,\n        category_id: this.categoryAction?.event?.id,\n      };\n\n      this.categoriesService\n        .editCategoryName(requestEditCategory)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.categoryForm.reset();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Categoria editada com sucesso!',\n              life: 3000,\n            });\n          },\n          error: (err) => {\n            console.log(err);\n            this.categoryForm.reset();\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao editar categoria!',\n              life: 3000,\n            });\n          },\n        });\n    }\n  }\n\n  setCategoryName(categoryName: string): void {\n    if (categoryName) {\n      this.categoryForm.setValue({\n        name: categoryName,\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div>\n  <form [formGroup]=\"categoryForm\" (ngSubmit)=\"handleSubmitCategoryAction()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n      <input pInputText placeholder=\"Nome\" formControlName=\"name\" />\n\n      <div\n        class=\"flex flex-row justify-content-center align-content-center align-items-center\"\n      >\n        <p-button\n          [disabled]=\"!categoryForm.valid\"\n          type=\"submit\"\n          label=\"Concluir\"\n        ></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}