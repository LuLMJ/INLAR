{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class BeneficiarioFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.addBeneficiarioAction = 'ADD_BENEFICIARIO_ACTION';\n    this.editBeneficiarioAction = 'EDIT_BENEFICIARIO_ACTION';\n    this.tipoPessoaOptions = [{\n      label: 'Física',\n      value: 'F'\n    }, {\n      label: 'Jurídica',\n      value: 'J'\n    }];\n    this.generoOptions = [{\n      label: 'Masculino',\n      value: 'M'\n    }, {\n      label: 'Feminino',\n      value: 'F'\n    }, {\n      label: 'Outro',\n      value: 'O'\n    }];\n    this.addBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n    this.editBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n  }\n  ngOnInit() {\n    // Inicialize outras coisas aqui, se necessário\n  }\n  handleSubmitAddBeneficiario() {\n    if (this.addBeneficiarioForm.valid) {\n      const beneficiarioData = this.addBeneficiarioForm.value;\n      console.log('Novo Beneficiário:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n\n  handleSubmitEditBeneficiario() {\n    if (this.editBeneficiarioForm.valid) {\n      const beneficiarioData = this.editBeneficiarioForm.value;\n      console.log('Beneficiário Editado:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n}\n\nBeneficiarioFormComponent.ɵfac = function BeneficiarioFormComponent_Factory(t) {\n  return new (t || BeneficiarioFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nBeneficiarioFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BeneficiarioFormComponent,\n  selectors: [[\"app-beneficiario-form\"]],\n  decls: 2,\n  vars: 0,\n  template: function BeneficiarioFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" beneficiario-form works!\\n\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","BeneficiarioFormComponent","constructor","fb","label","value","addBeneficiarioForm","group","nome","required","datanasc","tipopessoa","genero","cpf","rg","cnpj","contato1","contato2","cep","logradoudo","numero","complemento","bairro","cidade","siglaestado","observacoes","editBeneficiarioForm","ngOnInit","handleSubmitAddBeneficiario","valid","beneficiarioData","console","log","handleSubmitEditBeneficiario","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})\nexport class BeneficiarioFormComponent implements OnInit {\n  public addBeneficiarioForm: FormGroup;\n  public editBeneficiarioForm: FormGroup;\n  public beneficiarioAction: any;\n  public addBeneficiarioAction = 'ADD_BENEFICIARIO_ACTION';\n  public editBeneficiarioAction = 'EDIT_BENEFICIARIO_ACTION';\n\n  public tipoPessoaOptions = [\n    { label: 'Física', value: 'F' },\n    { label: 'Jurídica', value: 'J' }\n  ];\n\n  public generoOptions = [\n    { label: 'Masculino', value: 'M' },\n    { label: 'Feminino', value: 'F' },\n    { label: 'Outro', value: 'O' }\n  ];\n\n  constructor(private fb: FormBuilder) {\n    this.addBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n\n    this.editBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    // Inicialize outras coisas aqui, se necessário\n  }\n\n  handleSubmitAddBeneficiario(): void {\n    if (this.addBeneficiarioForm.valid) {\n      const beneficiarioData = this.addBeneficiarioForm.value;\n      console.log('Novo Beneficiário:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n\n  handleSubmitEditBeneficiario(): void {\n    if (this.editBeneficiarioForm.valid) {\n      const beneficiarioData = this.editBeneficiarioForm.value;\n      console.log('Beneficiário Editado:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n}\n","<p>\n  beneficiario-form works!\n</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}