{"ast":null,"code":"import { Subject, takeUntil } from 'rxjs';\nimport { CategoryFormComponent } from '../../components/category-form/category-form.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/categories/categories.service\";\nimport * as i2 from \"primeng/dynamicdialog\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../../../shared/components/toolbar-navigation/toolbar-navigation.component\";\nimport * as i6 from \"../../components/categories-table/categories-table.component\";\nexport class CategoriesHomeComponent {\n  constructor(categoriesService, dialogService, messageService, confirmationService, router) {\n    this.categoriesService = categoriesService;\n    this.dialogService = dialogService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.router = router;\n    this.destroy$ = new Subject();\n    this.categoriesDatas = [];\n  }\n  ngOnInit() {\n    this.getAllCategories();\n  }\n  getAllCategories() {\n    this.categoriesService.getAllCategories().pipe(takeUntil(this.destroy$)).subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.categoriesDatas = response;\n        }\n      },\n      //Rota para quando dar algum erro na busca das informações\n      error: err => {\n        console.log(err);\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erro',\n          detail: 'Erro ao buscar categorias!',\n          life: 3000\n        });\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  handleDeleteCategoryAction(event) {\n    if (event) {\n      this.confirmationService.confirm({\n        message: `Confirma a exclusão da categoria: ${event?.categoryName}`,\n        header: 'Confirmação de exclusão',\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: 'Sim',\n        rejectLabel: 'Não',\n        accept: () => this.deleteCategory(event?.category_id)\n      });\n    }\n  }\n  deleteCategory(category_id) {\n    if (category_id) {\n      this.categoriesService.deleteCategory({\n        category_id\n      }).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          this.getAllCategories();\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Sucesso',\n            detail: 'Categoria removida com sucesso!',\n            life: 3000\n          });\n        },\n        error: err => {\n          console.log(err);\n          this.getAllCategories();\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao remover categoria!',\n            life: 3000\n          });\n        }\n      });\n      this.getAllCategories();\n    }\n  }\n  handleCategoryAction(event) {\n    if (event) {\n      this.ref = this.dialogService.open(CategoryFormComponent, {\n        header: event?.action,\n        width: '70%',\n        contentStyle: {\n          overflow: 'auto'\n        },\n        baseZIndex: 10000,\n        maximizable: true,\n        data: {\n          event: event\n        }\n      });\n      this.ref.onClose.pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => this.getAllCategories()\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nCategoriesHomeComponent.ɵfac = function CategoriesHomeComponent_Factory(t) {\n  return new (t || CategoriesHomeComponent)(i0.ɵɵdirectiveInject(i1.CategoriesService), i0.ɵɵdirectiveInject(i2.DialogService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.Router));\n};\nCategoriesHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoriesHomeComponent,\n  selectors: [[\"app-categories-home\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"categories\", \"deleteCategoryEvent\", \"categoryEvent\"]],\n  template: function CategoriesHomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-toolbar-navigation\");\n      i0.ɵɵelementStart(1, \"app-categories-table\", 0);\n      i0.ɵɵlistener(\"deleteCategoryEvent\", function CategoriesHomeComponent_Template_app_categories_table_deleteCategoryEvent_1_listener($event) {\n        return ctx.handleDeleteCategoryAction($event);\n      })(\"categoryEvent\", function CategoriesHomeComponent_Template_app_categories_table_categoryEvent_1_listener($event) {\n        return ctx.handleCategoryAction($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"categories\", ctx.categoriesDatas);\n    }\n  },\n  dependencies: [i5.ToolbarNavigationComponent, i6.CategoriesTableComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Subject","takeUntil","CategoryFormComponent","CategoriesHomeComponent","constructor","categoriesService","dialogService","messageService","confirmationService","router","ngOnInit","getAllCategories","pipe","destroy$","subscribe","next","response","length","categoriesDatas","error","err","console","log","add","severity","summary","detail","life","navigate","handleDeleteCategoryAction","event","confirm","message","categoryName","header","icon","acceptLabel","rejectLabel","accept","deleteCategory","category_id","handleCategoryAction","ref","open","action","width","contentStyle","overflow","baseZIndex","maximizable","data","onClose","ngOnDestroy","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\categories\\page\\categories-home\\categories-home.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\categories\\page\\categories-home\\categories-home.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { Subject, takeUntil } from 'rxjs';\nimport { DeleteCategoryAction } from 'src/app/models/interfaces/categories/event/DeleteCategoryAction';\nimport { GetCategoriesResponse } from 'src/app/models/interfaces/categories/responses/GetCategoriesResponse';\nimport { EventAction } from 'src/app/models/interfaces/products/event/EventAction';\nimport { CategoriesService } from 'src/app/services/categories/categories.service';\nimport { CategoryFormComponent } from '../../components/category-form/category-form.component';\n\n@Component({\n  selector: 'app-categories-home',\n  templateUrl: './categories-home.component.html',\n  styleUrls: [],\n})\nexport class CategoriesHomeComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n  private ref!: DynamicDialogRef;\n  public categoriesDatas: Array<GetCategoriesResponse> = [];\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private dialogService: DialogService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getAllCategories();\n  }\n\n  getAllCategories() {\n    this.categoriesService\n      .getAllCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          if (response.length > 0) {\n            this.categoriesDatas = response;\n          }\n        },\n                //Rota para quando dar algum erro na busca das informações\n        error: (err) => {\n          console.log(err);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao buscar categorias!',\n            life: 3000,\n          });\n          this.router.navigate(['/dashboard']);\n        },\n      });\n  }\n\n  handleDeleteCategoryAction(event: DeleteCategoryAction): void {\n    if (event) {\n      this.confirmationService.confirm({\n        message: `Confirma a exclusão da categoria: ${event?.categoryName}`,\n        header: 'Confirmação de exclusão',\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: 'Sim',\n        rejectLabel: 'Não',\n        accept: () => this.deleteCategory(event?.category_id),\n      });\n    }\n  }\n\n  deleteCategory(category_id: string): void {\n    if (category_id) {\n      this.categoriesService\n        .deleteCategory({ category_id })\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            this.getAllCategories();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Categoria removida com sucesso!',\n              life: 3000,\n            });\n          },\n          error: (err) => {\n            console.log(err);\n            this.getAllCategories();\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao remover categoria!',\n              life: 3000,\n            });\n          },\n        });\n\n      this.getAllCategories();\n    }\n  }\n\n  handleCategoryAction(event: EventAction): void {\n    if (event) {\n      this.ref = this.dialogService.open(CategoryFormComponent, {\n        header: event?.action,\n        width: '70%',\n        contentStyle: { overflow: 'auto' },\n        baseZIndex: 10000,\n        maximizable: true,\n        data: {\n          event: event,\n        },\n      });\n\n      this.ref.onClose.pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => this.getAllCategories(),\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<app-toolbar-navigation></app-toolbar-navigation>\n\n<app-categories-table\n  [categories]=\"categoriesDatas\"\n  (deleteCategoryEvent)=\"handleDeleteCategoryAction($event)\"\n  (categoryEvent)=\"handleCategoryAction($event)\"\n></app-categories-table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}