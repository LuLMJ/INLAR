{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BeneficiarioEvent } from 'src/app/models/enums/beneficiario/BeneficiarioEvent';\nlet BeneficiarioFormComponent = class BeneficiarioFormComponent {\n  constructor(categoriesService, beneficiariosService, beneficiariosDtService, formBuilder, messageService, router, ref) {\n    this.categoriesService = categoriesService;\n    this.beneficiariosService = beneficiariosService;\n    this.beneficiariosDtService = beneficiariosDtService;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.router = router;\n    this.ref = ref;\n    this.destroy$ = new Subject();\n    this.categoriesDatas = [];\n    this.selectedCategory = [];\n    this.beneficiariosDatas = [];\n    this.addBeneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n    this.editBeneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n    this.addBeneficiarioAction = BeneficiarioEvent.ADD_BENEFICIARIO_ACTION;\n    this.editBeneficiarioAction = BeneficiarioEvent.EDIT_BENEFICIARIO_ACTION;\n  }\n  ngOnInit() {\n    this.beneficiarioAction = this.ref.data;\n    if (this.beneficiarioAction?.event?.action === this.editBeneficiarioAction && this.beneficiarioAction?.beneficiarioDatas) {\n      this.getBeneficiarioSelectedDatas(this.beneficiarioAction?.event?.id);\n    }\n    this.getAllCategories();\n  }\n  getAllCategories() {\n    this.categoriesService.getAllCategories().pipe(takeUntil(this.destroy$)).subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.categoriesDatas = response;\n        }\n      }\n    });\n  }\n  handleSubmitAddBeneficiario() {\n    if (this.addBeneficiarioForm?.value && this.addBeneficiarioForm?.valid) {\n      const requestCreateBeneficiario = {\n        nome: this.addBeneficiarioForm.value.nome,\n        datanasc: this.addBeneficiarioForm.value.datanasc,\n        tipopessoa: this.addBeneficiarioForm.value.tipopessoa,\n        genero: this.addBeneficiarioForm.value.genero,\n        cpf: this.addBeneficiarioForm.value.cpf,\n        cnpj: this.addBeneficiarioForm.value.cnpj,\n        contato1: this.addBeneficiarioForm.value.contato1,\n        contato2: this.addBeneficiarioForm.value.contato2,\n        cep: this.addBeneficiarioForm.value.cep,\n        logradoudo: this.addBeneficiarioForm.value.logradoudo,\n        numero: this.addBeneficiarioForm.value.numero,\n        complemento: this.addBeneficiarioForm.value.complemento,\n        bairro: this.addBeneficiarioForm.value.bairro,\n        cidade: this.addBeneficiarioForm.value.cidade,\n        siglaestado: this.addBeneficiarioForm.value.siglaestado,\n        observacoes: this.addBeneficiarioForm.value.observacoes\n      };\n      this.beneficiariosService.createBeneficiario(requestCreateBeneficiario).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          if (response) {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Benefici치rio criado com sucesso!',\n              life: 2500\n            });\n          }\n        },\n        error: err => {\n          console.log(err);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao criar benefici치rio!',\n            life: 2500\n          });\n        }\n      });\n    }\n    this.addBeneficiarioForm.reset();\n  }\n  handleSubmitEditBeneficiario() {\n    if (this.editBeneficiarioForm.value && this.editBeneficiarioForm.valid && this.beneficiarioAction.event.id) {\n      const requestEditBeneficiario = {\n        nome: this.editBeneficiarioForm.value.nome,\n        datanasc: this.editBeneficiarioForm.value.datanasc,\n        tipopessoa: this.editBeneficiarioForm.value.tipopessoa,\n        genero: this.editBeneficiarioForm.value.genero,\n        cpf: this.editBeneficiarioForm.value.cpf,\n        cnpj: this.editBeneficiarioForm.value.cnpj,\n        contato1: this.editBeneficiarioForm.value.contato1,\n        contato2: this.editBeneficiarioForm.value.contato2,\n        cep: this.editBeneficiarioForm.value.cep,\n        logradoudo: this.editBeneficiarioForm.value.logradoudo,\n        numero: this.editBeneficiarioForm.value.numero,\n        complemento: this.editBeneficiarioForm.value.complemento,\n        bairro: this.editBeneficiarioForm.value.bairro,\n        cidade: this.editBeneficiarioForm.value.cidade,\n        siglaestado: this.editBeneficiarioForm.value.siglaestado,\n        observacoes: this.editBeneficiarioForm.value.observacoes,\n        beneficiario_id: this.beneficiarioAction.event.id\n      };\n      this.beneficiariosService.editBeneficiario(requestEditBeneficiario).pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Sucesso',\n            detail: 'Benefici치rio editado com sucesso!',\n            life: 2500\n          });\n          this.editBeneficiarioForm.reset();\n        },\n        error: err => {\n          console.log(err);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erro',\n            detail: 'Erro ao editar benefici치rio!',\n            life: 2500\n          });\n          this.editBeneficiarioForm.reset();\n        }\n      });\n    }\n  }\n  getBeneficiarioSelectedDatas(beneficiarioId) {\n    const allBeneficiarios = this.beneficiarioAction?.beneficiarioDatas;\n    if (allBeneficiarios.length > 0) {\n      const beneficiarioFiltered = allBeneficiarios.filter(element => element?.id === beneficiarioId);\n      if (beneficiarioFiltered) {\n        this.beneficiarioSelectedDatas = beneficiarioFiltered[0];\n        this.editBeneficiarioForm.setValue({\n          nome: this.beneficiarioSelectedDatas?.nome,\n          datanasc: this.beneficiarioSelectedDatas?.datanasc,\n          tipopessoa: this.beneficiarioSelectedDatas?.tipopessoa,\n          genero: this.beneficiarioSelectedDatas?.genero,\n          cpf: this.beneficiarioSelectedDatas?.cpf,\n          cnpj: this.beneficiarioSelectedDatas?.cnpj,\n          contato1: this.beneficiarioSelectedDatas?.contato1,\n          contato2: this.beneficiarioSelectedDatas?.contato2,\n          cep: this.beneficiarioSelectedDatas?.cep,\n          logradoudo: this.beneficiarioSelectedDatas?.logradoudo,\n          numero: this.beneficiarioSelectedDatas?.numero,\n          complemento: this.beneficiarioSelectedDatas?.complemento,\n          bairro: this.beneficiarioSelectedDatas?.bairro,\n          cidade: this.beneficiarioSelectedDatas?.cidade,\n          siglaestado: this.beneficiarioSelectedDatas?.siglaestado,\n          observacoes: this.beneficiarioSelectedDatas?.observacoes\n        });\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n};\nBeneficiarioFormComponent = __decorate([Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})], BeneficiarioFormComponent);\nexport { BeneficiarioFormComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Subject","takeUntil","BeneficiarioEvent","BeneficiarioFormComponent","constructor","categoriesService","beneficiariosService","beneficiariosDtService","formBuilder","messageService","router","ref","group","nome","required","datanasc","tipopessoa","genero","cpf","cnpj","contato1","contato2","cep","logradoudo","numero","complemento","bairro","cidade","siglaestado","observacoes","ADD_BENEFICIARIO_ACTION","EDIT_BENEFICIARIO_ACTION","ngOnInit","beneficiarioAction","data","event","action","editBeneficiarioAction","beneficiarioDatas","getBeneficiarioSelectedDatas","id","getAllCategories","pipe","destroy$","subscribe","next","response","length","categoriesDatas","handleSubmitAddBeneficiario","addBeneficiarioForm","value","valid","requestCreateBeneficiario","createBeneficiario","add","severity","summary","detail","life","error","err","console","log","reset","handleSubmitEditBeneficiario","editBeneficiarioForm","requestEditBeneficiario","beneficiario_id","editBeneficiario","beneficiarioId","allBeneficiarios","beneficiarioFiltered","filter","element","beneficiarioSelectedDatas","setValue","ngOnDestroy","complete","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BeneficiarioEvent } from 'src/app/models/enums/beneficiario/BeneficiarioEvent';\nimport { GetCategoriesResponse } from 'src/app/models/interfaces/categories/responses/GetCategoriesResponse';\nimport { EventAction } from 'src/app/models/interfaces/beneficiario/event/EventAction';\nimport { CreateBeneficiarioRequest } from 'src/app/models/interfaces/beneficiario/request/CreateBeneficiarioRequest';\nimport { EditBeneficiarioRequest } from 'src/app/models/interfaces/beneficiario/request/EditBeneficiarioRequest';\nimport { GetAllBeneficiarioResponse } from 'src/app/models/interfaces/beneficiario/responses/GetAllBeneficiarioResponse';\nimport { CategoriesService } from 'src/app/services/categories/categories.service';\nimport { BeneficiariosService } from 'src/app/services/beneficiario/beneficiario.service';\nimport { BeneficiariosDataTransferService } from 'src/app/shared/services/beneficiarios/beneficiarios-data-transfer.service';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: [],\n})\nexport class BeneficiarioFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n  public categoriesDatas: Array<GetCategoriesResponse> = [];\n  public selectedCategory: Array<{ name: string; code: string }> = [];\n  public beneficiarioAction!: {\n    event: EventAction;\n    beneficiarioDatas: Array<GetAllBeneficiarioResponse>;\n  };\n  public beneficiarioSelectedDatas!: GetAllBeneficiarioResponse;\n  public beneficiariosDatas: Array<GetAllBeneficiarioResponse> = [];\n  public addBeneficiarioForm = this.formBuilder.group({\n    nome: ['', Validators.required],\n    datanasc: [null],\n    tipopessoa: ['F', Validators.required],\n    genero: [null],\n    cpf: [''],\n    cnpj: [''],\n    contato1: [''],\n    contato2: [''],\n    cep: [''],\n    logradoudo: [''],\n    numero: [''],\n    complemento: [''],\n    bairro: [''],\n    cidade: [''],\n    siglaestado: [''],\n    observacoes: ['']\n  });\n  public editBeneficiarioForm = this.formBuilder.group({\n    nome: ['', Validators.required],\n    datanasc: [null],\n    tipopessoa: ['F', Validators.required],\n    genero: [null],\n    cpf: [''],\n    cnpj: [''],\n    contato1: [''],\n    contato2: [''],\n    cep: [''],\n    logradoudo: [''],\n    numero: [''],\n    complemento: [''],\n    bairro: [''],\n    cidade: [''],\n    siglaestado: [''],\n    observacoes: ['']\n  });\n\n  public addBeneficiarioAction = BeneficiarioEvent.ADD_BENEFICIARIO_ACTION;\n  public editBeneficiarioAction = BeneficiarioEvent.EDIT_BENEFICIARIO_ACTION;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private beneficiariosService: BeneficiariosService,\n    private beneficiariosDtService: BeneficiariosDataTransferService,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private router: Router,\n    public ref: DynamicDialogConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.beneficiarioAction = this.ref.data;\n\n    if (\n      this.beneficiarioAction?.event?.action === this.editBeneficiarioAction &&\n      this.beneficiarioAction?.beneficiarioDatas\n    ) {\n      this.getBeneficiarioSelectedDatas(this.beneficiarioAction?.event?.id as string);\n    }\n\n    this.getAllCategories();\n  }\n\n  getAllCategories(): void {\n    this.categoriesService\n      .getAllCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          if (response.length > 0) {\n            this.categoriesDatas = response;\n          }\n        },\n      });\n  }\n\n  handleSubmitAddBeneficiario(): void {\n    if (this.addBeneficiarioForm?.value && this.addBeneficiarioForm?.valid) {\n      const requestCreateBeneficiario: CreateBeneficiarioRequest = {\n        nome: this.addBeneficiarioForm.value.nome as string,\n        datanasc: this.addBeneficiarioForm.value.datanasc as Date,\n        tipopessoa: this.addBeneficiarioForm.value.tipopessoa as string,\n        genero: this.addBeneficiarioForm.value.genero as string,\n        cpf: this.addBeneficiarioForm.value.cpf as string,\n        cnpj: this.addBeneficiarioForm.value.cnpj as string,\n        contato1: this.addBeneficiarioForm.value.contato1 as string,\n        contato2: this.addBeneficiarioForm.value.contato2 as string,\n        cep: this.addBeneficiarioForm.value.cep as string,\n        logradoudo: this.addBeneficiarioForm.value.logradoudo as string,\n        numero: this.addBeneficiarioForm.value.numero as string,\n        complemento: this.addBeneficiarioForm.value.complemento as string,\n        bairro: this.addBeneficiarioForm.value.bairro as string,\n        cidade: this.addBeneficiarioForm.value.cidade as string,\n        siglaestado: this.addBeneficiarioForm.value.siglaestado as string,\n        observacoes: this.addBeneficiarioForm.value.observacoes as string,\n      };\n\n      this.beneficiariosService\n        .createBeneficiario(requestCreateBeneficiario)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            if (response) {\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Sucesso',\n                detail: 'Benefici치rio criado com sucesso!',\n                life: 2500,\n              });\n            }\n          },\n          error: (err) => {\n            console.log(err);\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao criar benefici치rio!',\n              life: 2500,\n            });\n          },\n        });\n    }\n\n    this.addBeneficiarioForm.reset();\n  }\n\n  handleSubmitEditBeneficiario(): void {\n    if (\n      this.editBeneficiarioForm.value &&\n      this.editBeneficiarioForm.valid &&\n      this.beneficiarioAction.event.id\n    ) {\n      const requestEditBeneficiario: EditBeneficiarioRequest = {\n        nome: this.editBeneficiarioForm.value.nome as string,\n        datanasc: this.editBeneficiarioForm.value.datanasc as Date,\n        tipopessoa: this.editBeneficiarioForm.value.tipopessoa as string,\n        genero: this.editBeneficiarioForm.value.genero as string,\n        cpf: this.editBeneficiarioForm.value.cpf as string,\n        cnpj: this.editBeneficiarioForm.value.cnpj as string,\n        contato1: this.editBeneficiarioForm.value.contato1 as string,\n        contato2: this.editBeneficiarioForm.value.contato2 as string,\n        cep: this.editBeneficiarioForm.value.cep as string,\n        logradoudo: this.editBeneficiarioForm.value.logradoudo as string,\n        numero: this.editBeneficiarioForm.value.numero as string,\n        complemento: this.editBeneficiarioForm.value.complemento as string,\n        bairro: this.editBeneficiarioForm.value.bairro as string,\n        cidade: this.editBeneficiarioForm.value.cidade as string,\n        siglaestado: this.editBeneficiarioForm.value.siglaestado as string,\n        observacoes: this.editBeneficiarioForm.value.observacoes as string,\n        beneficiario_id: this.beneficiarioAction.event.id,\n      };\n\n      this.beneficiariosService\n        .editBeneficiario(requestEditBeneficiario)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Sucesso',\n              detail: 'Benefici치rio editado com sucesso!',\n              life: 2500,\n            });\n            this.editBeneficiarioForm.reset();\n          },\n          error: (err) => {\n            console.log(err);\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erro',\n              detail: 'Erro ao editar benefici치rio!',\n              life: 2500,\n            });\n            this.editBeneficiarioForm.reset();\n          },\n        });\n    }\n  }\n\n  getBeneficiarioSelectedDatas(beneficiarioId: string): void {\n    const allBeneficiarios = this.beneficiarioAction?.beneficiarioDatas;\n\n    if (allBeneficiarios.length > 0) {\n      const beneficiarioFiltered = allBeneficiarios.filter(\n        (element) => element?.id === beneficiarioId\n      );\n\n      if (beneficiarioFiltered) {\n        this.beneficiarioSelectedDatas = beneficiarioFiltered[0];\n\n        this.editBeneficiarioForm.setValue({\n          nome: this.beneficiarioSelectedDatas?.nome,\n          datanasc: this.beneficiarioSelectedDatas?.datanasc,\n          tipopessoa: this.beneficiarioSelectedDatas?.tipopessoa,\n          genero: this.beneficiarioSelectedDatas?.genero,\n          cpf: this.beneficiarioSelectedDatas?.cpf,\n          cnpj: this.beneficiarioSelectedDatas?.cnpj,\n          contato1: this.beneficiarioSelectedDatas?.contato1,\n          contato2: this.beneficiarioSelectedDatas?.contato2,\n          cep: this.beneficiarioSelectedDatas?.cep,\n          logradoudo: this.beneficiarioSelectedDatas?.logradoudo,\n          numero: this.beneficiarioSelectedDatas?.numero,\n          complemento: this.beneficiarioSelectedDatas?.complemento,\n          bairro: this.beneficiarioSelectedDatas?.bairro,\n          cidade: this.beneficiarioSelectedDatas?.cidade,\n          siglaestado: this.beneficiarioSelectedDatas?.siglaestado,\n          observacoes: this.beneficiarioSelectedDatas?.observacoes,\n        });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}