{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/inputtext\";\nimport * as i5 from \"primeng/dropdown\";\nfunction BeneficiarioFormComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BeneficiarioFormComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 21);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BeneficiarioFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function BeneficiarioFormComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.handleSubmitAddBeneficiario());\n    });\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelement(3, \"input\", 3)(4, \"p-calendar\", 4);\n    i0.ɵɵelementStart(5, \"p-dropdown\", 5);\n    i0.ɵɵlistener(\"onChange\", function BeneficiarioFormComponent_div_0_Template_p_dropdown_onChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onTipoPessoaChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BeneficiarioFormComponent_div_0_div_6_Template, 2, 0, \"div\", 0);\n    i0.ɵɵtemplate(7, BeneficiarioFormComponent_div_0_div_7_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelement(8, \"p-dropdown\", 6)(9, \"input\", 7)(10, \"input\", 8)(11, \"input\", 9)(12, \"input\", 10)(13, \"input\", 11)(14, \"input\", 12)(15, \"input\", 13)(16, \"input\", 14)(17, \"input\", 15)(18, \"input\", 16)(19, \"input\", 17);\n    i0.ɵɵelementStart(20, \"div\", 18);\n    i0.ɵɵelement(21, \"p-button\", 19);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.addBeneficiarioForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.tipoPessoaOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isPessoaFisica);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isPessoaFisica);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r0.generoOptions);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.addBeneficiarioForm.valid);\n  }\n}\nexport class BeneficiarioFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.addBeneficiarioAction = 'ADD_BENEFICIARIO_ACTION';\n    this.editBeneficiarioAction = 'EDIT_BENEFICIARIO_ACTION';\n    this.isPessoaFisica = true;\n    this.tipoPessoaOptions = [{\n      label: 'Física',\n      value: 'F'\n    }, {\n      label: 'Jurídica',\n      value: 'J'\n    }];\n    this.generoOptions = [{\n      label: 'Masculino',\n      value: 'M'\n    }, {\n      label: 'Feminino',\n      value: 'F'\n    }, {\n      label: 'Outro',\n      value: 'O'\n    }];\n    this.addBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n    this.editBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n  }\n  ngOnInit() {\n    this.onTipoPessoaChange({\n      value: 'F'\n    }); // Defina o estado inicial\n  }\n\n  onTipoPessoaChange(event) {\n    const tipoPessoa = event.value;\n    this.isPessoaFisica = tipoPessoa === 'F';\n    if (this.isPessoaFisica) {\n      this.addBeneficiarioForm.get('cpf')?.setValidators([Validators.required]);\n      this.addBeneficiarioForm.get('cnpj')?.clearValidators();\n    } else {\n      this.addBeneficiarioForm.get('cnpj')?.setValidators([Validators.required]);\n      this.addBeneficiarioForm.get('cpf')?.clearValidators();\n    }\n    this.addBeneficiarioForm.get('cpf')?.updateValueAndValidity();\n    this.addBeneficiarioForm.get('cnpj')?.updateValueAndValidity();\n  }\n  handleSubmitAddBeneficiario() {\n    if (this.addBeneficiarioForm.valid) {\n      const beneficiarioData = this.addBeneficiarioForm.value;\n      console.log('Novo Beneficiário:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n\n  handleSubmitEditBeneficiario() {\n    if (this.editBeneficiarioForm.valid) {\n      const beneficiarioData = this.editBeneficiarioForm.value;\n      console.log('Beneficiário Editado:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n}\n\nBeneficiarioFormComponent.ɵfac = function BeneficiarioFormComponent_Factory(t) {\n  return new (t || BeneficiarioFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nBeneficiarioFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BeneficiarioFormComponent,\n  selectors: [[\"app-beneficiario-form\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"flex\", \"flex-column\", \"md:flex-column\", \"gap-3\"], [\"pInputText\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"nome\"], [\"placeholder\", \"Data de Nascimento\", \"formControlName\", \"datanasc\"], [\"placeholder\", \"Tipo de Pessoa\", \"formControlName\", \"tipopessoa\", 3, \"options\", \"onChange\"], [\"placeholder\", \"G\\u00EAnero\", \"formControlName\", \"genero\", 3, \"options\"], [\"pInputText\", \"\", \"placeholder\", \"RG\", \"formControlName\", \"rg\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 1\", \"formControlName\", \"contato1\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 2\", \"formControlName\", \"contato2\"], [\"pInputText\", \"\", \"placeholder\", \"CEP\", \"formControlName\", \"cep\"], [\"pInputText\", \"\", \"placeholder\", \"Logradouro\", \"formControlName\", \"logradoudo\"], [\"pInputText\", \"\", \"placeholder\", \"N\\u00FAmero\", \"formControlName\", \"numero\"], [\"pInputText\", \"\", \"placeholder\", \"Complemento\", \"formControlName\", \"complemento\"], [\"pInputText\", \"\", \"placeholder\", \"Bairro\", \"formControlName\", \"bairro\"], [\"pInputText\", \"\", \"placeholder\", \"Cidade\", \"formControlName\", \"cidade\"], [\"pInputText\", \"\", \"placeholder\", \"Estado\", \"formControlName\", \"siglaestado\"], [\"pInputText\", \"\", \"placeholder\", \"Observa\\u00E7\\u00F5es\", \"formControlName\", \"observacoes\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\", \"m-1\"], [\"type\", \"submit\", \"label\", \"Concluir\", 3, \"disabled\"], [\"pInputText\", \"\", \"placeholder\", \"CPF\", \"formControlName\", \"cpf\"], [\"pInputText\", \"\", \"placeholder\", \"CNPJ\", \"formControlName\", \"cnpj\"]],\n  template: function BeneficiarioFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BeneficiarioFormComponent_div_0_Template, 22, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", (ctx.beneficiarioAction == null ? null : ctx.beneficiarioAction.event == null ? null : ctx.beneficiarioAction.event.action) === ctx.addBeneficiarioAction);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.Button, i4.InputText, i5.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","BeneficiarioFormComponent","constructor","fb","label","value","addBeneficiarioForm","group","nome","required","datanasc","tipopessoa","genero","cpf","rg","cnpj","contato1","contato2","cep","logradoudo","numero","complemento","bairro","cidade","siglaestado","observacoes","editBeneficiarioForm","ngOnInit","onTipoPessoaChange","event","tipoPessoa","isPessoaFisica","get","setValidators","clearValidators","updateValueAndValidity","handleSubmitAddBeneficiario","valid","beneficiarioData","console","log","handleSubmitEditBeneficiario","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})\nexport class BeneficiarioFormComponent implements OnInit {\n  public addBeneficiarioForm: FormGroup;\n  public editBeneficiarioForm: FormGroup;\n  public beneficiarioAction: any;\n  public addBeneficiarioAction = 'ADD_BENEFICIARIO_ACTION';\n  public editBeneficiarioAction = 'EDIT_BENEFICIARIO_ACTION';\n  public isPessoaFisica = true;\n\n  public tipoPessoaOptions = [\n    { label: 'Física', value: 'F' },\n    { label: 'Jurídica', value: 'J' }\n  ];\n\n  public generoOptions = [\n    { label: 'Masculino', value: 'M' },\n    { label: 'Feminino', value: 'F' },\n    { label: 'Outro', value: 'O' }\n  ];\n\n  constructor(private fb: FormBuilder) {\n    this.addBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n\n    this.editBeneficiarioForm = this.fb.group({\n      nome: ['', Validators.required],\n      datanasc: [null],\n      tipopessoa: ['F', Validators.required],\n      genero: [null],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradoudo: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaestado: [''],\n      observacoes: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.onTipoPessoaChange({ value: 'F' }); // Defina o estado inicial\n  }\n\n  onTipoPessoaChange(event: any): void {\n    const tipoPessoa = event.value;\n    this.isPessoaFisica = tipoPessoa === 'F';\n    if (this.isPessoaFisica) {\n      this.addBeneficiarioForm.get('cpf')?.setValidators([Validators.required]);\n      this.addBeneficiarioForm.get('cnpj')?.clearValidators();\n    } else {\n      this.addBeneficiarioForm.get('cnpj')?.setValidators([Validators.required]);\n      this.addBeneficiarioForm.get('cpf')?.clearValidators();\n    }\n    this.addBeneficiarioForm.get('cpf')?.updateValueAndValidity();\n    this.addBeneficiarioForm.get('cnpj')?.updateValueAndValidity();\n  }\n\n  handleSubmitAddBeneficiario(): void {\n    if (this.addBeneficiarioForm.valid) {\n      const beneficiarioData = this.addBeneficiarioForm.value;\n      console.log('Novo Beneficiário:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n\n  handleSubmitEditBeneficiario(): void {\n    if (this.editBeneficiarioForm.valid) {\n      const beneficiarioData = this.editBeneficiarioForm.value;\n      console.log('Beneficiário Editado:', beneficiarioData);\n      // Aqui você pode emitir um evento ou fazer uma chamada de API\n    }\n  }\n}\n","<!-- FORMULÁRIO DE NOVO BENEFICIARIO -->\n<div *ngIf=\"beneficiarioAction?.event?.action === addBeneficiarioAction\">\n  <form [formGroup]=\"addBeneficiarioForm\" (ngSubmit)=\"handleSubmitAddBeneficiario()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n      <!-- Nome do beneficiário -->\n      <input pInputText placeholder=\"Nome\" formControlName=\"nome\" />\n\n      <!-- Data de nascimento -->\n      <p-calendar placeholder=\"Data de Nascimento\" formControlName=\"datanasc\"></p-calendar>\n\n      <!-- Tipo de pessoa -->\n      <p-dropdown\n        [options]=\"tipoPessoaOptions\"\n        placeholder=\"Tipo de Pessoa\"\n        formControlName=\"tipopessoa\"\n        (onChange)=\"onTipoPessoaChange($event)\"\n      ></p-dropdown>\n\n      <!-- Exibir CPF se Tipo de Pessoa for F -->\n      <div *ngIf=\"isPessoaFisica\">\n        <input pInputText placeholder=\"CPF\" formControlName=\"cpf\" />\n      </div>\n\n      <!-- Exibir CNPJ se Tipo de Pessoa for J -->\n      <div *ngIf=\"!isPessoaFisica\">\n        <input pInputText placeholder=\"CNPJ\" formControlName=\"cnpj\" />\n      </div>\n\n      <!-- Gênero -->\n      <p-dropdown [options]=\"generoOptions\" placeholder=\"Gênero\" formControlName=\"genero\"></p-dropdown>\n\n      <!-- RG -->\n      <input pInputText placeholder=\"RG\" formControlName=\"rg\" />\n\n      <!-- Contato 1 -->\n      <input pInputText placeholder=\"Contato 1\" formControlName=\"contato1\" />\n\n      <!-- Contato 2 -->\n      <input pInputText placeholder=\"Contato 2\" formControlName=\"contato2\" />\n\n      <!-- CEP -->\n      <input pInputText placeholder=\"CEP\" formControlName=\"cep\" />\n\n      <!-- Logradouro -->\n      <input pInputText placeholder=\"Logradouro\" formControlName=\"logradoudo\" />\n\n      <!-- Número -->\n      <input pInputText placeholder=\"Número\" formControlName=\"numero\" />\n\n      <!-- Complemento -->\n      <input pInputText placeholder=\"Complemento\" formControlName=\"complemento\" />\n\n      <!-- Bairro -->\n      <input pInputText placeholder=\"Bairro\" formControlName=\"bairro\" />\n\n      <!-- Cidade -->\n      <input pInputText placeholder=\"Cidade\" formControlName=\"cidade\" />\n\n      <!-- Estado -->\n      <input pInputText placeholder=\"Estado\" formControlName=\"siglaestado\" />\n\n      <!-- Observações -->\n      <input pInputText placeholder=\"Observações\" formControlName=\"observacoes\" />\n\n      <div class=\"flex flex-row justify-content-center align-content-center align-items-center m-1\">\n        <p-button [disabled]=\"!addBeneficiarioForm.valid\" type=\"submit\" label=\"Concluir\"></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}