{"ast":null,"code":"import { BehaviorSubject, map, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProductsDataTransferService {\n  constructor() {\n    this.productsDataEmitter$ = new BehaviorSubject(null);\n    this.productsDatas = [];\n  }\n  setProductsDatas(products) {\n    if (products) {\n      this.productsDataEmitter$.next(products);\n      this.getProductsDatas();\n    }\n  }\n  getProductsDatas() {\n    this.productsDataEmitter$.pipe(take(1), map(data => data?.filter(product => product.amount > 0))).subscribe({\n      next: response => {\n        if (response) {\n          this.productsDatas = response;\n        }\n      }\n    });\n    return this.productsDatas;\n  }\n}\nProductsDataTransferService.ɵfac = function ProductsDataTransferService_Factory(t) {\n  return new (t || ProductsDataTransferService)();\n};\nProductsDataTransferService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsDataTransferService,\n  factory: ProductsDataTransferService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,EAAEC,GAAG,EAAEC,IAAI,QAAQ,MAAM;;AAMjD,OAAM,MAAOC,2BAA2B;EAHxCC;IAIS,yBAAoB,GACzB,IAAIJ,eAAe,CAAuC,IAAI,CAAC;IAC1D,kBAAa,GAAkC,EAAE;;EAExDK,gBAAgB,CAACC,QAAuC;IACtD,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAACF,QAAQ,CAAC;MACxC,IAAI,CAACG,gBAAgB,EAAE;;EAE3B;EAEAA,gBAAgB;IACd,IAAI,CAACF,oBAAoB,CACtBG,IAAI,CACHR,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAEU,IAAI,IAAKA,IAAI,EAAEC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAC7D,CACAC,SAAS,CAAC;MACTP,IAAI,EAAGQ,QAAQ,IAAI;QACjB,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACC,aAAa,GAAGD,QAAQ;;MAEjC;KACD,CAAC;IACJ,OAAO,IAAI,CAACC,aAAa;EAC3B;;AA1BWd,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;SAA3BA,2BAA2B;EAAAe,SAA3Bf,2BAA2B;EAAAgB,YAF1B;AAAM","names":["BehaviorSubject","map","take","ProductsDataTransferService","constructor","setProductsDatas","products","productsDataEmitter$","next","getProductsDatas","pipe","data","filter","product","amount","subscribe","response","productsDatas","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\shared\\services\\products\\products-data-transfer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, map, take } from 'rxjs';\nimport { GetAllProductsResponse } from 'src/app/models/interfaces/products/response/GetAllProductsResponse';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsDataTransferService {\n  public productsDataEmitter$ =\n    new BehaviorSubject<Array<GetAllProductsResponse> | null>(null);\n  public productsDatas: Array<GetAllProductsResponse> = [];\n\n  setProductsDatas(products: Array<GetAllProductsResponse>): void {\n    if (products) {\n      this.productsDataEmitter$.next(products);\n      this.getProductsDatas();\n    }\n  }\n\n  getProductsDatas() {\n    this.productsDataEmitter$\n      .pipe(\n        take(1),\n        map((data) => data?.filter((product) => product.amount > 0))\n      )\n      .subscribe({\n        next: (response) => {\n          if (response) {\n            this.productsDatas = response;\n          }\n        },\n      });\n    return this.productsDatas;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}