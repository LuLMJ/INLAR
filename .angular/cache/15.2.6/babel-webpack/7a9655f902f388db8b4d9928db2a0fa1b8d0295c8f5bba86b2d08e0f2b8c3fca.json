{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/dynamicdialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/beneficiario/beneficiario.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/inputtextarea\";\nfunction BeneficiarioFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 19)(2, \"input\", 20)(3, \"input\", 21)(4, \"input\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BeneficiarioFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 23);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BeneficiarioFormComponent {\n  constructor(ref, formBuilder, messageService, beneficiarioService) {\n    this.ref = ref;\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.beneficiarioService = beneficiarioService;\n    this.destroy$ = new Subject();\n    this.isEditing = false; // Flag para verificar se está editando um beneficiário existente\n    this.beneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      tipoPessoa: ['F', Validators.required],\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradouro: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaEstado: [''],\n      observacoes: [''],\n      ativo: [true] // Valor padrão 'true' para ativo\n    });\n  }\n\n  ngOnInit() {\n    const beneficiarioData = this.ref.data;\n    if (beneficiarioData) {\n      this.isEditing = !!beneficiarioData.idbeneficiario; // Verifica se há um ID para determinar se é edição\n      this.populateForm(beneficiarioData);\n    }\n  }\n  handleSubmit() {\n    if (this.beneficiarioForm.valid) {\n      const formData = this.beneficiarioForm.value;\n      if (this.isEditing) {\n        this.editBeneficiario(formData);\n      } else {\n        this.addBeneficiario(formData);\n      }\n    } else {\n      this.handleErrorMessage('Formulário inválido. Verifique os campos obrigatórios.');\n    }\n  }\n  addBeneficiario(formData) {\n    this.beneficiarioService['createBeneficiario'](formData).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário criado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao criar beneficiário!');\n      }\n    });\n  }\n  editBeneficiario(formData) {\n    const editAction = {\n      action: 'edit',\n      id: formData.idbeneficiario,\n      beneficiarioName: formData.nome\n    };\n    this.beneficiarioService['editBeneficiario'](editAction).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário editado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao editar beneficiário!');\n      }\n    });\n  }\n  populateForm(beneficiarioData) {\n    this.beneficiarioForm.patchValue({\n      nome: beneficiarioData.nome,\n      tipoPessoa: beneficiarioData.tipoPessoa,\n      cpf: beneficiarioData.cpf,\n      rg: beneficiarioData.rg,\n      cnpj: beneficiarioData.cnpj,\n      contato1: beneficiarioData.contato1,\n      contato2: beneficiarioData.contato2,\n      cep: beneficiarioData.cep,\n      logradouro: beneficiarioData.logradouro,\n      numero: beneficiarioData.numero,\n      complemento: beneficiarioData.complemento,\n      bairro: beneficiarioData.bairro,\n      cidade: beneficiarioData.cidade,\n      siglaEstado: beneficiarioData.siglaEstado,\n      observacoes: beneficiarioData.observacoes,\n      ativo: beneficiarioData.ativo\n    });\n  }\n  handleSuccessMessage(detail) {\n    this.beneficiarioForm.reset();\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Sucesso',\n      detail: detail,\n      life: 3000\n    });\n  }\n  handleErrorMessage(detail) {\n    this.messageService.add({\n      severity: 'error',\n      summary: 'Erro',\n      detail: detail,\n      life: 3000\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nBeneficiarioFormComponent.ɵfac = function BeneficiarioFormComponent_Factory(t) {\n  return new (t || BeneficiarioFormComponent)(i0.ɵɵdirectiveInject(i1.DynamicDialogConfig), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.BeneficiarioService));\n};\nBeneficiarioFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BeneficiarioFormComponent,\n  selectors: [[\"app-beneficiario-form\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"flex\", \"flex-column\", \"md:flex-column\", \"gap-3\"], [\"pInputText\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"nome\"], [\"pInputText\", \"\", \"formControlName\", \"tipoPessoa\", 1, \"\"], [\"value\", \"F\"], [\"value\", \"J\"], [4, \"ngIf\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 1\", \"formControlName\", \"contato1\"], [\"pInputText\", \"\", \"placeholder\", \"Contato 2\", \"formControlName\", \"contato2\"], [\"pInputText\", \"\", \"placeholder\", \"CEP\", \"formControlName\", \"cep\"], [\"pInputText\", \"\", \"placeholder\", \"Logradouro\", \"formControlName\", \"logradouro\"], [\"pInputText\", \"\", \"placeholder\", \"N\\u00FAmero\", \"formControlName\", \"numero\"], [\"pInputText\", \"\", \"placeholder\", \"Complemento\", \"formControlName\", \"complemento\"], [\"pInputText\", \"\", \"placeholder\", \"Bairro\", \"formControlName\", \"bairro\"], [\"pInputText\", \"\", \"placeholder\", \"Cidade\", \"formControlName\", \"cidade\"], [\"pInputText\", \"\", \"placeholder\", \"Sigla Estado\", \"formControlName\", \"siglaEstado\"], [\"pInputTextarea\", \"\", \"placeholder\", \"Observa\\u00E7\\u00F5es\", \"formControlName\", \"observacoes\"], [1, \"flex\", \"flex-row\", \"justify-content-center\", \"align-content-center\", \"align-items-center\"], [\"type\", \"submit\", \"label\", \"Concluir\", 3, \"disabled\"], [\"maxlength\", \"11\", \"pInputText\", \"\", \"placeholder\", \"CPF\", \"formControlName\", \"cpf\", 2, \"margin-right\", \"13px!important\"], [\"pInputText\", \"\", \"maxlength\", \"10\", \"pIplaceholder\", \"RG\", \"formControlName\", \"rg\", 2, \"margin-right\", \"13px!important\"], [\"pInputText\", \"\", \"maxlength\", \"1\", \"placeholder\", \"G\\u00EAnero: M ou F\", \"formControlName\", \"genero\", 2, \"margin-right\", \"13px!important\"], [\"type\", \"date\", \"pInputText\", \"\", \"placeholder\", \"Data de Nascimento\", \"formControlName\", \"dataNascimento\"], [\"pInputText\", \"\", \"placeholder\", \"CNPJ\", \"maxlength\", \"14\", \"formControlName\", \"cnpj\"]],\n  template: function BeneficiarioFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function BeneficiarioFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.handleSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"select\", 3)(5, \"option\", 4);\n      i0.ɵɵtext(6, \"Pessoa F\\u00EDsica\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Pessoa Jur\\u00EDdica\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, BeneficiarioFormComponent_div_9_Template, 5, 0, \"div\", 6);\n      i0.ɵɵtemplate(10, BeneficiarioFormComponent_div_10_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelement(11, \"input\", 7)(12, \"input\", 8)(13, \"input\", 9)(14, \"input\", 10)(15, \"input\", 11)(16, \"input\", 12)(17, \"input\", 13)(18, \"input\", 14)(19, \"input\", 15)(20, \"textarea\", 16);\n      i0.ɵɵelementStart(21, \"div\", 17);\n      i0.ɵɵelement(22, \"p-button\", 18);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.beneficiarioForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.beneficiarioForm.get(\"tipoPessoa\")) == null ? null : tmp_1_0.value) === \"F\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.beneficiarioForm.get(\"tipoPessoa\")) == null ? null : tmp_2_0.value) === \"J\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disabled\", !ctx.beneficiarioForm.valid);\n    }\n  },\n  dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.Button, i7.InputText, i8.InputTextarea],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","Subject","takeUntil","i0","BeneficiarioFormComponent","constructor","ref","formBuilder","messageService","beneficiarioService","beneficiarioForm","group","nome","required","tipoPessoa","cpf","rg","cnpj","contato1","contato2","cep","logradouro","numero","complemento","bairro","cidade","siglaEstado","observacoes","ativo","ngOnInit","beneficiarioData","data","isEditing","idbeneficiario","populateForm","handleSubmit","valid","formData","value","editBeneficiario","addBeneficiario","handleErrorMessage","pipe","destroy$","subscribe","next","handleSuccessMessage","error","editAction","action","id","beneficiarioName","patchValue","detail","reset","add","severity","summary","life","ngOnDestroy","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.ts","C:\\Users\\CaioCoelho\\Desktop\\AULA-55\\src\\app\\modules\\beneficiario\\components\\beneficiario-form\\beneficiario-form.component.html"],"sourcesContent":["// beneficiario-form.component.ts\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BeneficiarioService } from 'src/app/services/beneficiario/beneficiario.service';\nimport { GetBeneficiarioResponse } from 'src/app/models/interfaces/beneficiario/responses/GetBeneficiarioResponse';\nimport { EditBeneficiarioAction } from 'src/app/models/interfaces/beneficiario/event/EditBeneficiarioAction';\n\n@Component({\n  selector: 'app-beneficiario-form',\n  templateUrl: './beneficiario-form.component.html',\n  styleUrls: []\n})\nexport class BeneficiarioFormComponent implements OnInit, OnDestroy {\n  private readonly destroy$: Subject<void> = new Subject();\n\n  public beneficiarioForm: FormGroup;\n  public isEditing = false; // Flag para verificar se está editando um beneficiário existente\n\n  constructor(\n    public ref: DynamicDialogConfig,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private beneficiarioService: BeneficiarioService\n  ) {\n    this.beneficiarioForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      tipoPessoa: ['F', Validators.required], // Valor padrão 'F' para pessoa física\n      cpf: [''],\n      rg: [''],\n      cnpj: [''],\n      contato1: [''],\n      contato2: [''],\n      cep: [''],\n      logradouro: [''],\n      numero: [''],\n      complemento: [''],\n      bairro: [''],\n      cidade: [''],\n      siglaEstado: [''],\n      observacoes: [''],\n      ativo: [true] // Valor padrão 'true' para ativo\n    });\n  }\n\n  ngOnInit(): void {\n    const beneficiarioData = this.ref.data;\n\n    if (beneficiarioData) {\n      this.isEditing = !!beneficiarioData.idbeneficiario; // Verifica se há um ID para determinar se é edição\n      this.populateForm(beneficiarioData);\n    }\n  }\n\n  handleSubmit(): void {\n    if (this.beneficiarioForm.valid) {\n      const formData = this.beneficiarioForm.value;\n\n      if (this.isEditing) {\n        this.editBeneficiario(formData);\n      } else {\n        this.addBeneficiario(formData);\n      }\n    } else {\n      this.handleErrorMessage('Formulário inválido. Verifique os campos obrigatórios.');\n    }\n  }\n\n  private addBeneficiario(formData: any): void {\n    this.beneficiarioService['createBeneficiario'](formData).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário criado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao criar beneficiário!');\n      }\n    });\n  }\n\n  private editBeneficiario(formData: any): void {\n    const editAction: EditBeneficiarioAction = {\n      action: 'edit',\n      id: formData.idbeneficiario, // Supondo que o ID seja parte do formulário ou recuperado de outra forma\n      beneficiarioName: formData.nome\n    };\n\n    this.beneficiarioService['editBeneficiario'](editAction).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: () => {\n        this.handleSuccessMessage('Beneficiário editado com sucesso!');\n      },\n      error: () => {\n        this.handleErrorMessage('Erro ao editar beneficiário!');\n      }\n    });\n  }\n\n  private populateForm(beneficiarioData: GetBeneficiarioResponse): void {\n    this.beneficiarioForm.patchValue({\n      nome: beneficiarioData.nome,\n      tipoPessoa: beneficiarioData.tipoPessoa, // Certifique-se de usar o nome correto da propriedade do tipo\n      cpf: beneficiarioData.cpf,\n      rg: beneficiarioData.rg,\n      cnpj: beneficiarioData.cnpj,\n      contato1: beneficiarioData.contato1,\n      contato2: beneficiarioData.contato2,\n      cep: beneficiarioData.cep,\n      logradouro: beneficiarioData.logradouro,\n      numero: beneficiarioData.numero,\n      complemento: beneficiarioData.complemento,\n      bairro: beneficiarioData.bairro,\n      cidade: beneficiarioData.cidade,\n      siglaEstado: beneficiarioData.siglaEstado, // Certifique-se de usar o nome correto da propriedade do tipo\n      observacoes: beneficiarioData.observacoes,\n      ativo: beneficiarioData.ativo\n    });\n  }\n\n  private handleSuccessMessage(detail: string): void {\n    this.beneficiarioForm.reset();\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Sucesso',\n      detail: detail,\n      life: 3000\n    });\n  }\n\n  private handleErrorMessage(detail: string): void {\n    this.messageService.add({\n      severity: 'error',\n      summary: 'Erro',\n      detail: detail,\n      life: 3000\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div>\n  <form [formGroup]=\"beneficiarioForm\" (ngSubmit)=\"handleSubmit()\">\n    <div class=\"card flex flex-column md:flex-column gap-3\">\n      <input pInputText placeholder=\"Nome\" formControlName=\"nome\" />\n      \n      \n      <select pInputText formControlName=\"tipoPessoa\" class=\"\" >\n        <option value=\"F\">Pessoa Física</option>\n        <option value=\"J\">Pessoa Jurídica</option>  \n      </select>\n\n      <div *ngIf=\"beneficiarioForm.get('tipoPessoa')?.value === 'F'\">\n        <input style=\"margin-right: 13px!important\" maxlength=\"11\" pInputText placeholder=\"CPF\" formControlName=\"cpf\" />\n        <input style=\"margin-right: 13px!important\" pInputText  maxlength=\"10\" pIplaceholder=\"RG\" formControlName=\"rg\" />\n        <input style=\"margin-right: 13px!important\" pInputText maxlength=\"1\"  placeholder=\"Gênero: M ou F\" formControlName=\"genero\" />\n        <input type=\"date\" pInputText placeholder=\"Data de Nascimento\" formControlName=\"dataNascimento\" />\n      </div>\n\n      <div *ngIf=\"beneficiarioForm.get('tipoPessoa')?.value === 'J'\">\n        <input pInputText placeholder=\"CNPJ\" maxlength=\"14\" formControlName=\"cnpj\" />\n      </div>\n\n      <input pInputText placeholder=\"Contato 1\" formControlName=\"contato1\" />\n      <input pInputText placeholder=\"Contato 2\" formControlName=\"contato2\" />\n      <input pInputText placeholder=\"CEP\" formControlName=\"cep\" />\n      <input pInputText placeholder=\"Logradouro\" formControlName=\"logradouro\" />\n      <input pInputText placeholder=\"Número\" formControlName=\"numero\" />\n      <input pInputText placeholder=\"Complemento\" formControlName=\"complemento\" />\n      <input pInputText placeholder=\"Bairro\" formControlName=\"bairro\" />\n      <input pInputText placeholder=\"Cidade\" formControlName=\"cidade\" />\n      <input pInputText placeholder=\"Sigla Estado\" formControlName=\"siglaEstado\" />\n      <textarea pInputTextarea placeholder=\"Observações\" formControlName=\"observacoes\"></textarea>\n\n      <div class=\"flex flex-row justify-content-center align-content-center align-items-center\">\n        <p-button [disabled]=\"!beneficiarioForm.valid\" type=\"submit\" label=\"Concluir\"></p-button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}